.row
  .col-xs-12
    .alert.alert-warning.alert-dismissible{ :role => "alert" }
      %button.close{"aria-label" => "Close", "data-dismiss" => "alert", :type => "button"}
        %span{"aria-hidden" => "true"} Ã—
      %ul
        %li= Organization.ratanak? ?  I18n.t('inline_help.clients.show.notes.lists.ratanak.list1') : I18n.t('inline_help.clients.show.notes.lists.list1')
    .row
      %div{ class: "col-md-#{ @client.referred? || @client.exit_ngo? ? '9' : '12' }"}
        %table.table.small.m-b-xs#main-info
          %tbody
            %tr
              %td{rowspan: '4'}
                - if @client.profile?
                  = image_tag @client.profile.photo, alt: @client.profile.file.filename, id: 'client_photo'
              %td
                = "#{t('.name')} :"
                = editable @client, :given_name, value: @client.given_name, url: api_client_path(@client.id), pk: @client.id
                = editable @client, :family_name, value: @client.family_name, url: api_client_path(@client.id), pk: @client.id
              - if @client.status
                %td
                  %a{:role => "button", :tabIndex => "0",  data:{ toggle: "popover", html: 'true', trigger: "focus", content: "#{I18n.t('inline_help.clients.show.status')}" } }
                    = fa_icon "info-circle", class: 'text-info m-xs'
                  = "#{t('.status')} :"
                  %span.show-status= status_style(@client.status)
            %tr
              %td
                %a{:role => "button", :tabIndex => "0",  data:{ toggle: "popover", trigger: "focus", content: "#{I18n.t('inline_help.clients.show.id')}" } }
                  = fa_icon "info-circle", class: 'text-info m-xs'
                = "#{t('.id')} :"
                %strong= @client.slug
              %td
                = "#{t('.gender')} :"
                %strong= editable @client, :gender, type: :select, source: [Client::GENDER_OPTIONS, Client::GENDER_OPTIONS.map{|value| I18n.t("default_client_fields.gender_list.#{ value.gsub('other', 'other_gender') }") }].transpose.to_h, value: @client.gender, url: api_client_path(@client.id), pk: @client.id
            %tr
              %td
                = "#{t('.date_of_birth')} :"
                %strong= editable @client, :date_of_birth, type: :date, value: @client.date_of_birth_format, url: api_client_path(@client.id), pk: @client.id, placement: 'bottom'
              %td
                = "#{t('created_by')} #{whodunnit('Client', @client.id)} #{t('at')} #{ date_format @client.created_at }"
            %tr
              %td
                = "#{t('.age')} :"
                %strong= @client.age

              %td
                - if policy(@client).show?(:province)
                  = "#{t('.current_province')} :"
                  %strong= editable @client, :province_id, type: :select2, source: @current_provinces, value: @client.province&.name, url: api_client_path(@client.id), pk: @client.id
      .col-md-3
        - if @client.status == 'Referred'
          .row
            .col-xs-12
              .row
                - if current_setting.use_screening_assessment? && @client.referred?
                  .col-xs-12
                    - if @client.require_screening_assessment?(current_setting)
                      = link_to t('.complete_screening_assessment'), new_client_custom_field_property_path(@client, custom_field_id: current_setting.screening_assessment_form), class: 'btn btn-success'
                    - elsif @client.custom_fields.include?(current_setting.screening_assessment_form)
                      = link_to t('.view_screening_assessment'), client_custom_field_properties_path(@client, custom_field_id: current_setting.screening_assessment_form), class: 'btn btn-success'

                .col-xs-12{ class: "#{'mini-margin' if current_setting.use_screening_assessment? && @client.referred? }" }
                  - if @client.require_screening_assessment?(current_setting) || (@client.calls.any? && @client.calls.most_recents.first.case_action_not_required?)
                    %button.btn.btn-success.agree-btn{ disabled: 'disabled', data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.clients.show.accepted')}", placement: "auto" } }
                      = t('.accept')
                  - else
                    %button.btn.btn-success.agree-btn{ data: { class_name: 'accept-client', disable_with: t('.accepting'), 'target' => "#accept-client", 'toggle' => 'modal', trigger: "hover", content: "#{Organization.ratanak? ? I18n.t('inline_help.clients.show.ratanak.accepted') : I18n.t('inline_help.clients.show.accepted')}", placement: "auto" } }= t('.accept')

                    = render 'clients/accept_client'
                .col-xs-12
                  - if @client.require_screening_assessment?(current_setting)
                    %button.btn.btn-danger.mini-margin{ disabled: 'disabled', class: 'agree-btn', data: { target: '#exitFromNgo', toggle: "modal", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.reject')}", placement: "auto" } } #{t('.reject')}
                  - else
                    %button.btn.btn-danger.mini-margin{ class: 'agree-btn', data: { target: '#exitFromNgo', toggle: "modal", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.reject')}", placement: "auto" } } #{t('.reject')}

            .col-xs-12
              = render 'client/exit_ngos/form', client: @client

        - elsif @client.status == 'Exited'
          .row
            .col-xs-12
              %button.btn.btn-success.mini-margin.enter-ngo-for-client{ class: 'agree-btn', data: { class_name: 'accept-client', disable_with: t('.accepting'), 'target' => "#enter-ngo-form", 'toggle' => 'modal', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.accepted')}", placement: "auto" } } #{t('.accept')}
              = render 'client/enter_ngos/form', client: @client
            .col-xs-12
              %button.btn.btn-danger.mini-margin{ disabled: 'disabled', class: 'agree-btn', data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.clients.show.reject')}", placement: "auto" } }= t('.reject')

    - if @client.status != 'Referred'
      - if Organization.current.short_name == 'demo' || Organization.current.short_name == 'tutorials'
        - ngos = Organization.test_ngos.exclude_current.order(:full_name).map{|org| [org.full_name, org.short_name] }
      - else
        - ngos = Organization.exclude_current.oscar.order(:full_name).map{|org| [org.full_name, org.short_name] }
      - ngos = mapping_ngos(ngos)
      .row
        .col-xs-12
          .btn-group.small-btn-margin
            %button.btn-sm.btn.btn-warning.dropdown-toggle.btn-fit.exit-ngo-for-client{ data: { toggle: "dropdown", trigger: 'hover', content: "#{I18n.t('inline_help.clients.show.exit_ngo')}", placement: "auto" }, id: 'add-client-to-case', class: ('disabled' if status_exited?(@client.status)) }
              = t('.exit_ngo_btn')
              %span.caret
            %ul.dropdown-menu.btn-fit
              %li
                - if @client.client_enrollments.active.count > 0
                  %a{"data-target" => '#remaining-programs-modal', "data-toggle" => 'modal'}
                    .text-warning= t('.exit_ngo_btn')
                - else
                  %a{"data-target" => '#exitFromNgo', "data-toggle" => 'modal'}
                    .text-warning= t('.exit_ngo_btn')
          - if current_organization.available_for_referral?
            %input#client-id{ value: "#{@client.slug}", type: 'hidden' }
            .btn-group.small-btn-margin
              %button.btn-sm.btn.btn-warning.dropdown-toggle.btn-fit{ data: { toggle: "dropdown", html: 'true', trigger: 'hover', content: "#{I18n.t('inline_help.clients.show.referral_form')}", placement: "auto" }, class: ('disabled' if @client.referrals.empty?) }
                = t('.referral_forms')
                %span.caret
              %ul.dropdown-menu.btn-fit.scrollable-dropdown-menu.referral-forms
                %li= link_to t('.referred_to'), client_referrals_path(@client, referral_type: 'referred_to')
                %li= link_to t('.referred_from'), client_referrals_path(@client, referral_type: 'referred_from')
            .btn-group.small-btn-margin
              %button.btn-sm.btn.btn-warning.dropdown-toggle.btn-fit#add-referral-btn{ data: { toggle: "dropdown", html: 'true', trigger: 'hover', content: "#{I18n.t('inline_help.clients.show.refer_client')}", placement: "auto" } }
                = t('.refer_client')
                %span.caret
              %ul.dropdown-menu.btn-fit.scrollable-dropdown-menu.referral-forms
                - ngos.each do |value, key|
                  %li= link_to value, new_client_referral_url(@client, ngo: key, external_ngo_name: key == 'external referral' && value), :class => 'target-ngo', :value => "#{key}", :id => "#{key}"
          = link_to client_books_path(@client), data:{ toggle: "popover", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.client_book')}", placement: "auto" } do
            %span.btn-sm.btn.btn-info.small-btn-margin.btn-fit
              = t('.book')
          - if @client.client_enrollments.active.count > 0
            = render 'remaining_programs', client: @client
          - else
            = render 'client/exit_ngos/form', client: @client
          -# - if @client.cases.exclude_referred.current.present?
          -#   = render 'exit_case_form', client_case: @client.cases.exclude_referred.current, exit_from_cif: true
          = link_to client_tasks_path(@client), data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.clients.show.tasks')}", placement: "auto" } do
            %span.btn-sm.btn.btn-info.small-btn-margin.btn-fit
              %strong.count-margin= @client.tasks.incomplete.count
              = t('.view_tasks')
          - if enable_any_csi_tools?
            = link_to client_assessments_path(@client), data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.clients.assessments.button', assessment: t('clients.show.assessment') )}", placement: "auto" } do
              %span.btn-sm.btn.btn-info.small-btn-margin.btn-fit
                %strong.count-margin= @client.assessments.count
                = t('.assessment')
          - if (can? :manage, CaseNote) || (can? :edit, CaseNote)
            %span.btn-sm.btn.btn-info.small-btn-margin.btn-fit{ class: ('disabled' unless case_notes_readable?), data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.clients.case_notes.button')}", placement: "auto" } }
              = link_to_if case_notes_readable?, "#{@client.case_notes.count} #{t('clients.form.case_note')}", client_case_notes_path(@client)
          - if @client.has_any_quarterly_reports?
            - if can? :manage, QuarterlyReport
              = link_to client_case_quarterly_reports_path(@client, @client.latest_case) do
                %span.btn-sm.btn.color-brown.small-btn-margin.btn-fit= t('.view_legacy_quarterly_reports')
          - if @client.cases.exclude_referred.inactive.present?
            .btn-group.small-btn-margin
              %button.btn-fit{ class: "btn btn-sm btn-warning dropdown-toggle", "data-toggle" => "dropdown" }
                = t('.case_history')
                %span.caret
              %ul.dropdown-menu.btn-fit
                %li
                  - if @client.cases.exclude_referred.emergencies.inactive.present? && (ec_manageable || strategic_overviewer?)
                    = link_to client_cases_path(@client, case_type: 'EC') do
                      %span.text-success= t('.view_ec_history_btn_link')
                %li
                  - if @client.cases.exclude_referred.fosters.inactive.present? && (fc_manageable || strategic_overviewer?)
                    = link_to client_cases_path(@client, case_type: 'FC') do
                      %span.text-success= t('.view_fc_history_btn_link')
                %li
                  - if @client.cases.exclude_referred.kinships.inactive.present? && (kc_manageable || strategic_overviewer?)
                    = link_to client_cases_path(@client, case_type: 'KC') do
                      %span.text-success= t('.view_kc_history_btn_link')
          -# - if can_read_client_progress_note?
          -#   = link_to client_progress_notes_path(@client) do
          -#     %span.btn-sm.btn.btn-warning.small-btn-margin.btn-fit= t('.progress_note')
          .btn-group.small-btn-margin
            %button.btn-sm.btn.btn-success.dropdown-toggle.btn-fit{ class: ('disabled' if @group_client_custom_fields.empty?), data: { toggle: "dropdown", trigger: 'hover', html: 'true', content: "#{I18n.t('inline_help.clients.show.active_form')}", placement: "auto" } }
              = t('.additional_forms')
              %span.caret
            %ul.dropdown-menu.btn-fit.scrollable-dropdown-menu.additional-forms
              - @group_client_custom_fields.each do |_, client_custom_fields|
                %li
                  %p= link_to client_custom_fields.first.custom_field.form_title, client_custom_field_properties_path(@client, custom_field_id: client_custom_fields.first.custom_field_id)
          - if can? :manage, CustomFieldProperty
            .btn-group.small-btn-margin
              %button.btn-sm.btn.btn-success.dropdown-toggle.btn-fit{ data: { toggle: "dropdown", trigger: 'hover', html: 'true', content: "#{I18n.t('inline_help.clients.show.add_form')}", placement: "auto" }, class: ('disabled' if @free_client_forms.empty? || status_exited?(@client.status)) }
                = t('.add_form')
                %span.caret
              %ul.dropdown-menu.btn-fit.scrollable-dropdown-menu.add-form
                - @free_client_forms.each do |custom_field|
                  %li
                    %p= link_to custom_field.form_title, new_client_custom_field_property_path(@client, custom_field_id: custom_field)
          - if @client.client_enrollments.active.count > 0
            = link_to client_client_enrolled_programs_path(@client), data: { toggle: "popover", html: 'true', trigger: 'hover', content: "#{I18n.t('inline_help.clients.show.active_program')}", placement: "auto" } do
              .btn.btn-primary.small-btn-margin.btn-sm.btn-fit= t('.enrolled_program_streams')
          - else
            .btn.btn-primary.small-btn-margin.btn-sm.disabled.btn-fit{ data: { toggle: "popover", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.active_program')}", placement: "auto" } }
              = t('.enrolled_program_streams')

          = link_to client_client_enrollments_path(@client), data: { toggle: "popover", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.enroll_program')}", placement: "auto" } do
            .btn.btn-primary.small-btn-margin.btn-sm.btn-fit= t('.program_streams')

          - if government_forms_visible? && policy(@client).show?(:government_forms) && current_organization&.country != 'nepal'
            .btn-group.small-btn-margin
              %button.btn.btn-sm.btn-success.dropdown-toggle.btn-fit{"data-toggle" => "dropdown"}
                = t('.government_forms')
                %span.caret
              %ul.dropdown-menu.btn-fit
                %li
                  = link_to client_government_forms_path(@client, form: 'one') do
                    %span.text-success= t('.government_form_one')
                %li
                  = link_to client_government_forms_path(@client, form: 'two') do
                    %span.text-success= t('.government_form_two')
                %li
                  = link_to client_government_forms_path(@client, form: 'three') do
                    %span.text-success= t('.government_form_three')
                %li
                  = link_to client_government_forms_path(@client, form: 'four') do
                    %span.text-success= t('.government_form_four')
                %li
                  = link_to client_government_forms_path(@client, form: 'five') do
                    %span.text-success= t('.government_form_five')
                %li
                  = link_to client_government_forms_path(@client, form: 'six') do
                    %span.text-success= t('.government_form_six')
.row.mini-margin
  .col-xs-12
    .ibox
      .ibox-title
        %h5=t('.general_info')
        .ibox-tools
          %a.collapse-link
            .btn.btn-outline.btn-primary
              %i.fa.fa-chevron-up
          - if (can? :manage, Client) || (can? :rud, Client) || (can? :edit, Client)
            %small
              = link_to edit_client_path(@client), data: { toggle: "popover", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.edit')}", placement: "auto" } do
                .btn.btn-outline.btn-success
                  %i.fa.fa-pencil
          - if can? :destroy, Client
            %small
              = link_to @client, method: 'delete', data: { toggle: "popover", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.clients.show.delete')}", placement: "auto", confirm: t('.are_you_sure') } do
                .btn.btn-outline.btn-danger
                  %i.fa.fa-trash
      .ibox-content
        .row
          .col-sm-12.col-md-6.first-table
            %table.table.table-bordered
              - if policy(@client).show?(:local_given_name)
                %tr
                  %td.spacing-first-col
                    = current_organization.short_name == 'brc' ? t('clients.form.local_given_name') : "#{t('clients.form.local_given_name')} #{country_scope_label_translation}"
                  %td
                    %strong
                      = editable @client, :local_given_name, url: api_client_path(@client.id), pk: @client.id
              - if policy(@client).show?(:local_family_name)
                %tr
                  %td.spacing-first-col
                    = current_organization.short_name == 'brc' ? t('clients.form.local_family_name') : "#{t('clients.form.local_family_name')} #{country_scope_label_translation}"
                  %td
                    %strong
                      = editable @client, :local_family_name, url: api_client_path(@client.id), pk: @client.id
              - if current_setting.try(:enable_hotline) == true
                %tr
                  %td.spacing-first-col
                    = t('.nickname')
                  %td
                    = editable @client, :nickname, url: api_client_path(@client.id), pk: @client.id

              - %w(national_id_number passport_number marital_status nationality ethnicity location_of_concern type_of_trafficking).each do |field|
                - if policy(@client).show?(field.to_sym) && current_organization.short_name == 'brc'
                  %tr
                    %td.spacing-first-col= t(".#{field}")
                    %td= @client.public_send(field.to_sym)

              - if policy(@client).show?(:donor_info)
                %tr
                  %td.spacing-first-col
                    = t('.donor')
                  %td
                    %strong
                      - client_donors.each do|donor|
                        %strong.label.label-default.donor
                          = donor.name
              - if current_organization.short_name == 'brc'
                - %w(presented_id id_number legacy_brcs_id brsc_branch client_phone whatsapp other_phone_number other_phone_whatsapp).each do |field_name|
                  - if policy(@client).show?(field_name.to_sym)
                    %tr
                      %td.spacing-first-col
                        = t("clients.form.#{field_name}")
                      %td.address
                        %strong
                          = editable @client, field_name.to_sym, value: @client.public_send(field_name.to_sym), url: api_client_path(@client.id), pk: @client.id
              - if current_organization.short_name == 'brc'
                %tr
                  %td.spacing-first-col
                    = t('.current_address')
                  %td.address
                    %strong
                      = @client.brc_current_address
                %tr
                  %td.spacing-first-col
                    = t('.other_address')
                  %td.address
                    %strong
                      = @client.brc_other_address
              - else
                %tr
                  %td.spacing-first-col
                    = t('.address')
                  %td.address
                    %strong
                      = country_address_field(@client)
              - if @client.locality.present?
                %tr
                  %td.spacing-first-col
                    = t('.locality')
                  %td.address
                    %strong
                      = @client.locality
              - if current_setting.try(:enable_hotline) == true
                %tr
                  %td.spacing-first-col
                    = t('.concern_location')
                  %td.address
                    %strong= concern_merged_address(@client).join(', ')

              - if policy(@client).show?(:what3words)
                %tr
                  %td.spacing-first-col
                    = t('.what3words')
                  %td
                    %strong
                      = link_to "https://map.what3words.com/#{@client.what3words}", target: :_blank do
                        = @client.what3words
                        = image_tag 'what3words.png', class: 'what3words'

              - if policy(@client).show?(:birth_province)
                %tr
                  %td.spacing-first-col
                    = t(".province.#{@client.country_origin_label}")
                  %td
                    %strong
                      %strong= editable @client, :birth_province_id, type: :select2, source: @birth_provinces, value: @client.birth_province, url: api_client_path(@client.id), pk: @client.id

              %tr
                %td.spacing-first-col
                  = t('.name_of_referee')
                %td
                  %strong
                    = @client.referee.try(:name)
              %tr
                %td.spacing-first-col
                  = t('.referral_phone')
                %td
                  %strong
                    = @client.referee.try(:phone)

              - if policy(@client).show?(:carer_info)
                %tr
                  %td.spacing-first-col
                    = t('activerecord.attributes.carer.name')
                  %td
                    %strong
                      = @client.carer.try(:name)
                %tr
                  %td.spacing-first-col
                    = t('activerecord.attributes.carer.phone')
                  %td
                    %strong
                      = @client.carer.try(:phone)
              - if Setting.first.country_name == "cambodia" && !Organization.brc?
                %tr
                  %td.spacing-first-col
                    = t('.is_the_client_rated_for_id_poor')
                  %td
                    %strong
                      = editable @client, :rated_for_id_poor, type: :select, source: [Client::CLIENT_LEVELS, t('clients.level').values].transpose.to_h, value: @client.rated_for_id_poor, url: api_client_path(@client.id), pk: @client.id

              - if policy(@client).show?(:custom_ids)
                %tr
                  %td.spacing-first-col
                    = custom_id_translation('custom_id1')
                  %td
                    %strong
                      = editable @client, :code, value: @client.code, url: api_client_path(@client.id), pk: @client.id
                %tr
                  %td.spacing-first-col
                    = custom_id_translation('custom_id2')
                  %td
                    %strong
                      = editable @client, :kid_id, value: @client.kid_id, url: api_client_path(@client.id), pk: @client.id
              %tr
                %td.spacing-first-col
                  = t('.time_in_ngo')
                %td
                  %strong
                    = @client.time_in_ngo
              %tr
                %td.spacing-first-col
                  = t('.time_in_cps')
                %td
                  %strong
                    = @client.time_in_cps

          .col-sm-12.col-md-6.second-table
            %table.table.table-bordered
              %tr
                %td.spacing-first-col
                  = "#{t('.client_global_identity')}"
                %td
                  %strong
                    = fa_icon 'envelope', class: 'text-success', data: { toggle: 'popover', placement: 'top', content: @client.global_id }

              %tr
                %td.spacing-first-col
                  = t('.referral_source_category')
                %td
                  %strong
                    = referral_source_category(@client.referral_source_category_id)
              %tr
                %td.spacing-first-col
                  = t('.referral_source')
                %td
                  %strong
                    = @client.referral_source
              %tr
                %td.spacing-first-col
                  = t('.received_by')
                %td
                  %strong
                    = editable @client, :received_by_id, type: :select2, source: case_workers_option(@client.id, true), value: @client.received_by&.name, url: api_client_path(@client.id), pk: @client.id
                    = user @client.received_by, true
              %tr
                %td.spacing-first-col
                  = t('.followed_up_by')
                %td
                  %strong
                    = editable @client, :followed_up_by_id, type: :select2, source: case_workers_option(@client.id, true), value: @client.followed_up_by&.name, url: api_client_path(@client.id), pk: @client.id
                    = user @client.followed_up_by, true

              - if policy(@client).show?(:department)
                %tr
                  %td.spacing-first-col
                    = t('.department')
                  %td
                    %strong
                      = @client.department

              %tr
                %td.spacing-first-col
                  = t('.case_worker_or_staff')
                %td
                  %strong
                    - order_case_worker(@client).each do |case_worker|
                      %strong.label.label-default
                        = user case_worker
              %tr
                %td.spacing-first-col
                  = t('.initial_referral_date')
                %td
                  %strong
                    = editable @client, :initial_referral_date, type: :date, value: date_format(@client.initial_referral_date), url: api_client_path(@client.id), pk: @client.id
              %tr
                %td.spacing-first-col
                  = t('.follow_up_date')
                %td
                  %strong
                    = editable @client, :follow_up_date, type: :date, value: date_format(@client.follow_up_date), url: api_client_path(@client.id), pk: @client.id

              - %w(school_name school_grade main_school_contact education_background).each do |field|
                - if policy(@client).show?(field.to_sym)
                  %tr
                    %td.spacing-first-col
                      = t("clients.form.#{field}")
                    %td
                      %strong
                        - if field == 'school_grade'
                          = editable @client, :school_grade, type: :select2, source: [Client::GRADES, t('advanced_search.fields.school_grade_list').values].transpose.map{|v, t| { text: t.to_s, value: v.to_s } }, value: @client.school_grade, url: api_client_path(@client.id), pk: @client.id
                        - else
                          = editable @client, field.to_sym, value: @client.public_send(field.to_sym), url: api_client_path(@client.id), pk: @client.id


              - if policy(@client).show?(:relevant_referral_information)
                %tr
                  %td.spacing-first-col
                    = t('.relevant_referral_information')
                  %td
                    %strong
                      = editable @client, :relevant_referral_information, type: :textarea, value: @client.relevant_referral_information, url: api_client_path(@client.id), pk: @client.id
              %tr
                %td.spacing-first-col
                  = t('.agencies_involved')
                %td
                  - @client.agencies.each do|agency|
                    %strong.label.label-default.agency
                      = agency.name

              - Client::STACKHOLDER_CONTACTS_FIELDS.each do |field|
                - if policy(@client).show?(field.to_sym)
                  %tr
                    %td.spacing-first-col
                      = t("clients.form.#{field}")
                    %td
                      %strong
                        = @client.public_send(field.to_sym)

        - if @client.phone_counselling_summary.present?
          .row
            .col-xs-12
              %table.table.table-bordered
                %tr
                  %td.spacing-first-col
                    = t('.phone_counselling_summary')
                  %td
                    %strong
                      = editable @client, :phone_counselling_summary, value: @client.phone_counselling_summary, url: api_client_path(@client.id), pk: @client.id

        - if @client.quantitative_cases.any?
          .row
            .col-xs-12
              %table.table.table-bordered
                - @client.quantitative_cases.group_by(&:quantitative_type).each do |qtypes|
                  - next unless quantitative_type_readable?(qtypes.first.id)
                  %tr
                    %td.align-justify
                      = qtypes.first.name
                    %td.align-justify
                      - qtypes.last.each do |qcase|
                        %strong.label.label-default
                          = qcase.value

        - if policy(Client).show_legal_doc?
          #legal-document
            %table.table.table-bordered.table-hover#case-history-table
              %thead
                %tr
                  %th(colspan="4")
                    = t('clients.form.legal_documents')
              %tbody
                - %w(national_id birth_cert family_book passport travel_doc referral_doc local_consent police_interview other_legal_doc).each do |field|
                  - attachments = @client.send("#{field}_files")

                  - if policy(Client).show?(field.to_sym)
                    - if @client.send(field.to_sym)
                      %tr
                        %td(rowspan="#{ attachments.size + 1 }")
                          %strong= t("clients.form.#{field}")
                        %td(rowspan="#{ attachments.size + 1 }")
                          %strong
                            %span YES

                        - if attachments.size == 0
                          %td(colspan="2") No attachment

                      - if attachments.any?
                        - attachments.each_with_index do |attachment, index|
                          %tr
                            %td= original_filename(attachment)
                            %td
                              = link_to preview_or_download(attachment), attachment.url, class: 'btn btn-info btn-sm btn-download', target: target_blank(attachment)
                    - else
                      %tr
                        %td
                          %strong= t("clients.form.#{field}")
                        %td
                          %strong NO
                        %td(colspan="2")

        - if @case_histories.any?
          .row
            .col-xs-12
              %table.table.table-bordered.table-hover#case-history-table
                %thead
                  %tr
                    %th= t('.case_histories')
                    - unless Rails.env.production?
                      %th= t('.created_date')
                    %th= t('.date')
                    %th.text-center= t('.detail')
                %tbody
                  - @case_histories.each_with_index do |case_history, index|
                    - case_history_name = case_history.class.table_name
                    %tr.case-history-row{ data: {date: case_history.new_date, classname: case_history_name,name: case_history_label(case_history), created_date: case_history.created_at} }
                      %td= case_history_label(case_history)
                      - unless Rails.env.production?
                        %td= case_history.created_at.to_s
                      %td= date_format(case_history.new_date)
                      %td
                        .text-center
                          %button.btn.btn-outline.btn-primary.btn-xs{'data-target' => "#case_history_#{index}", 'data-toggle' => 'modal'}= fa_icon('eye')
                          - if current_user.admin?
                            - if ['enter_ngos', 'exit_ngos'].include?(case_history_name)
                              %button.btn.btn-outline.btn-success.btn-xs.edit-case-history-ngo{ data: { class_name: case_history_name },'data-target' => "##{case_history_name}-#{case_history.id}", 'data-toggle' => 'modal' }= fa_icon('pencil')
                            = case_history_links(case_history, case_history_name)
                        = render 'case_history_detail', object: case_history, index: index
                        = render_case_history(case_history, case_history_name)
                %tr
                  %td= t('.initial_referral_date')
                  - unless Rails.env.production?
                    %td= @client.created_at.to_s
                  %td= date_format(@client.initial_referral_date)
                  %td
                    .text-center
                      %button.btn.btn-outline.btn-primary.btn-xs{'data-target' => "#case_history_initial_referral_date", 'data-toggle' => 'modal'}= fa_icon('eye')
                    = render 'case_history_detail', object: @client, index: 'initial_referral_date'
        - if @client.calls.any?
          .row
            .col-xs-12
              %table.table.table-bordered.table-hover
                %thead
                  %tr
                    %th= t('.hotlines')
                    %th= t('.call_type')
                    %th= t('.date_of_call')
                    %th.text-center= t('.detail')
                %tbody
                  - @client.calls.most_recents.each do |call|
                    %tr
                      %td= call.phone_call_id
                      %td= t('.callType.' + call.call_type.parameterize.underscore)
                      %td= date_format(call.date_of_call)
                      %td.text-center
                        = link_to call_path(call) do
                          %button.btn.btn-outline.btn-primary.btn-xs= fa_icon('eye')

- if @family_grid.present?
  .row
    .col-xs-12
      .ibox.float-e-margins
        .ibox-title
          %h5= @results
          %span.label.label-info= t('.results')
        .ibox-content
          .families-table
            = datagrid_table @family_grid, order: false, html: { class: 'table table-bordered table-striped table-hover families'}

.row
  -# = render 'placement'
  = render 'referrals/confirm_referral'
  = render 'referrals/confirm_repeat_referral'
