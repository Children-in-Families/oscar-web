= simple_form_for(@client) do |f|
  .panel-body
    = f.error_notification
    .form-inputs
      .row
        .col-xs-12.col-md-4= f.input :first_name, label: "#{t('.name')}"
        .col-xs-12.col-md-4= f.input :gender, collection: [['Male', 'male'], ['Female', 'female']], include_blank: false, label: "#{t('.gender')}"
        .col-xs-12.col-md-4.form-group.date.optional.client_date_of_birth
          %label.date.optional.control-label{ for: 'client_date_of_birth' } #{t('.date_of_birth')}
          #client-birthdate.input-group.date
            = f.text_field :date_of_birth, class: 'date optional form-control date-picker', type: 'text', name: 'client[date_of_birth]', id: 'client_date_of_birth'
            %span.input-group-addon
              %i.glyphicon.glyphicon-calendar
      .row
        .col-xs-12.col-md-4= f.input :school_name, label: "#{t('.school_name')}"
        .col-xs-12.col-md-4= f.input :grade, label: "#{t('.school_grade')}"
        .col-xs-12.col-md-4= f.input :birth_province_id, collection: @province.map{|p| [p.name, p.id]},  label: "#{t('.province')}", placeholder: 'Select birth province'
      .row
        .col-xs-12.col-md-4= f.association :province, collection: @province, label: "#{t('.current_province')}", include_blank: false
        .col-xs-12.col-md-4= f.input :current_address, input_html: { rows: '6' }, label: "#{t('.current_address')}"
        .col-xs-12.col-md-4= f.association :user, collection: @user, label: "#{t('.case_worker_or_staff')}", include_blank: false if current_user.admin?
      .row
        .col-xs-12.col-md-4= f.input :received_by_id, collection: @user.map{|p| [p.name, p.id]}, label: "#{t('.received_by')}", include_blank: false
        .col-xs-12.col-md-4= f.input :followed_up_by_id, collection: @user.map{|p| [p.name, p.id]}, label: "#{t('.followed_up_by')}", include_blank: false
        .col-xs-12.col-md-4.form-group.date.optional.client_follow_up_date
          %label.date.optional.control-label{ for: 'client_follow_up_date' } #{t('.follow_up_date')}
          .input-group.date
            = f.text_field :follow_up_date, class: 'date optional form-control date-picker', type: 'text', name: 'client[follow_up_date]', id: 'client_follow_up_date'
            %span.input-group-addon
              %i.glyphicon.glyphicon-calendar

      .row
        .col-xs-12.col-md-4= f.association :agencies, collection: @agencies, multiple: true, label_method: :name, value_method: :id, label: "#{t('.agencies_involved')}", placeholder: 'Select one or multiple agencies involved'
        - QuantitativeType.all.each do |qt|
          .col-xs-12.col-md-4
            %label= qt.name
            = f.association :quantitative_cases, collection: qt.quantitative_cases, multiple: true, label_method: :value, value_method: :id, label: false, input_html: { class: able_related_info(qt.name) }

        .col-xs-12.col-md-4= f.association :referral_source, collection: @referral_source, label: "#{t('.referral_source')}", include_blank: false
      .row
        .col-xs-12.col-md-4= f.input :relevant_referral_information, input_html: { style: 'height: 120px;' }, label: "#{t('.relevant_referral_information')}"
        .col-xs-12.col-md-8
          .row
            .col-xs-12.col-md-6.form-group.date.optional.client_initial_referral_date
              %label.date.optional.control-label{ for: 'client_initial_referral_date' } #{t('.initial_referral_date')}
              .input-group.date
                = f.text_field :initial_referral_date, class: 'date optional form-control date-picker', type: 'text', name: 'client[initial_referral_date]', id: 'client_initial_referral_date'
                %span.input-group-addon
                  %i.glyphicon.glyphicon-calendar
            .col-xs-12.col-md-6= f.input :referral_phone, label: "#{t('.referral_phone')}"
          .row
            .col-xs-12
              .row
                .col-xs-12.col-md-6
                  .col-xs-12= f.input :has_been_in_orphanage, label: "#{t('.has_been_in_orphanage')}?"
                  .col-xs-12= f.input :able, as: :hidden
                  .col-xs-12= link_to 'Able Screening', '#able-screening-collapse', { class: 'btn btn-primary btn-block btn-xs',
                                                            'aria-controls': "able-screening-collapse",
                                                            'aria-expanded': false, 'data-toggle': 'collapse',
                                                            :role => 'button', id: 'able-screening-test' }
                .col-xs-12.col-md-6
                  .col-xs-12= f.input :has_been_in_government_care, label: "#{t('.has_been_in_government_care')}?"
                  .col-xs-12= f.input :able_state, collection: Client::ABLE_STATES, label: "#{t('.has_been_in_government_care')}?" if current_user.able_manager? && @client.persisted?
      .row
        .col-xs-12
          #able-screening-collapse.collapse
            .well
              %h3.text-center Able Screening
              %hr
              #non-stage-question
                %h4.text-center General Question
                = f.simple_fields_for(:answers, @answers_non_stage) do |answer_builder|
                  .question_and_answer{ data: { 'is-stage': "#{answer_builder.object.able_screening_question.has_stage?}" } }
                    = render 'answer_fields', f: answer_builder
              %hr
              #stage-question
                %h4.text-center Stage
                .row
                  = f.simple_fields_for(:answers, @answers_with_stage) do |answer_builder|
                    .col-xs-12.question_and_answer{ data: { 'from-age': "#{answer_builder.object.able_screening_question.stage.try(:from_age)}", 'to-age': "#{answer_builder.object.able_screening_question.stage.try(:to_age)}", 'is-stage': "#{answer_builder.object.able_screening_question.has_stage?}"} }
                      = render 'answer_stage_fields', f: answer_builder
  .panel-footer
    .form-actions
      = f.button :submit, t('save'), class: 'btn btn-primary form-btn'
      = link_to t('cancel'), clients_path, class: 'btn btn-default form-btn'
