- label = field_label(field_props)
%div{ class: "form-group i-checks #{field_with(field_props['label'],errors)}" }
  %label.control-label{ class: required?(field_props['required'] || false) }
    %abbr{ title: 'required' }= '*' if field_props['required'] || false
    = label.html_safe
  - if I18n.locale.to_s == I18n.default_locale.to_s
    = f.input remove_field_prop_unicode(field_props), collection: field_props['values'].map { |f| [ f['label'], f['label'], id: remove_special_characters("#{field_props['label'].gsub('"', '&qoute;').html_safe}_#{f['label'].html_safe}"), 'data-value': f['local_label']] }, as: :check_boxes, required: (field_props['required'] || false), label: false, input_html: { name: "#{f.object_name}[#{remove_field_prop_unicode(field_props)}][]", title: field_props['description'], 'data-checkbox': "#{f.object_name}[#{remove_local_field_prop_unicode(field_props)}]".parameterize }
    .hidden= f.input remove_local_field_prop_unicode(field_props), collection: field_props['values'].map { |field| [ field['local_label'], field['local_label'], checked: is_field_checked?(f.object, field_props, field['label']), id: remove_special_characters("#{field_props['label'].gsub('"', '&qoute;').html_safe}_#{field['label'].html_safe}")] }, as: :check_boxes, required: (field_props['required'] || false), label: false, input_html: { name: "#{f.object_name}[Local_label #{remove_local_field_prop_unicode(field_props)}][]" }
  - else
    = f.input "Local_label #{remove_local_field_prop_unicode(field_props)}", collection: field_props['values'].map { |field| [ field['local_label'], field['local_label'], id: remove_special_characters("#{field_props['label'].gsub('"', '&qoute;').html_safe}_#{field['label'].html_safe}"), 'data-value': field['local_label']] }, as: :check_boxes, required: (field_props['required'] || false), label: false, input_html: { name: "#{f.object_name}[Local_label #{remove_local_field_prop_unicode(field_props)}][]", title: field_props['description'], 'data-checkbox': "#{f.object_name}[#{remove_field_prop_unicode(field_props)}]".parameterize }
    .hidden= f.input remove_field_prop_unicode(field_props), as: :check_boxes, collection: field_props['values'].map { |field| [ field['label'], field['label'], checked: is_field_checked?(f.object, field_props, field['local_label'], 'local_label'), id: remove_special_characters("#{field_props['label'].gsub('"', '&qoute;').html_safe}_#{field['label'].html_safe}"), 'data-value': field['local_label']] }, required: (field_props['required'] || false), label: false, input_html: { name: "#{f.object_name}[#{remove_field_prop_unicode(field_props)}][]", title: field_props['description'], id: "#{f.object_name}[#{remove_field_prop_unicode(field_props)}]".parameterize, class: 'd-none' }
  %span.help-block
    = field_message(field_props['label'], errors)
