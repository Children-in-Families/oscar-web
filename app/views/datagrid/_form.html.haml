= form_for grid, options.merge({method: request_method}) do |f|
  = hidden_field_tag :locale, params[:locale]
  = hidden_field_tag :data, params[:data]

  - if controller_name == 'clients'
    %ul.check-columns-visibility{ 'aria-labelledby': 'dropdownMenuDivider' }
      %li.dropdown
        %a.dropdown-toggle.btn.btn-default{ href: '#', data: { toggle: 'dropdown', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.select_columns')}", placement: "right" } }
          = t('datagrid.columns.select_columns')
          %span.caret
        .float-right
          %span.p-xs.b-r-sm.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
            = check_box_tag 'no_case_note_check_box', 'no_case_note_check_box', checked = check_params_no_case_note, class: 'i-checks'
            %label=t('.no_case_note')
          %span.p-xs.b-r-sm.m-l.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
            = check_box_tag 'overdue-forms', 'overdue-forms', checked = check_params_has_over_forms, class: 'i-checks'
            %label=t('.has_overdue_forms')
          - if enable_any_csi_tools?
            %span.p-xs.b-r-sm.m-l.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
              = check_box_tag 'overdue-assessment', 'overdue-assessment', checked = check_params_has_over_assessment, class: 'i-checks'
              %label=t('.has_overdue_assessment', assessment: t('clients.show.assessment'))
          %span.p-xs.b-r-sm.m-l.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
            = check_box_tag 'overdue-task', 'overdue-task', checked = check_params_has_overdue_task, class: 'i-checks'
            %label=t('.has_overdue_task')

        %ul.dropdown-menu.columns-visibility
          %li
            .input-group
              %input.form-control.column-search-box{ placeholder: "Search", id: "column-search-box" }
              %span.input-group-btn
                %button.btn.btn-default.btn-clear-text{ type: "button" }
                  %i.fa.fa-close
          %li
            .all-visibility.col-sm-12
              = check_box_tag 'all_', 'all', checked = params['all_'].present? || saved_search_column_visibility('all_'), class: 'i-checks all_'
              = label_tag 'all_' do
                %strong= t('datagrid.columns.show_all')

          - grid.filters.each do |f|
            - next if f.name == :has_date_of_birth || f.name == :quantitative_data
            - next if f.name == :quantitative_types || f.name == :all_domains
            - next if f.name == :placement_date || f.name == :placement_case_type
            - next if f.name == :domain_1a || f.name == :domain_1b
            - next if f.name == :domain_2a || f.name == :domain_2b
            - next if f.name == :domain_3a || f.name == :domain_3b
            - next if f.name == :domain_4a || f.name == :domain_4b
            - next if f.name == :domain_5a || f.name == :domain_5b
            - next if f.name == :domain_6a || f.name == :domain_6b
            - next if f.name == :assessments_due_to || f.name == :no_case_note || f.name == :overdue_task || f.name == :overdue_forms
            - next if controller_name == 'clients' && !policy(Client).show?(f.name.to_s)


            - unless selected_country == 'cambodia'
              - next if f.name.in?([:commune, :village, :street_number, :house_number, :current_address])

            - unless selected_country.in?(['cambodia', 'thailand'])
              - next if f.name.in?([:province_id, :birth_province_id, :district])

            %li{ id: f.name }
              .visibility.col-sm-12
                = check_box_tag "#{f.name}_", f.name, checked = saved_search_column_visibility("#{f.name}_"), class: 'i-checks'
                = columns_visibility f.name

          - if selected_country == 'lesotho'
            %li
              .visibility.col-sm-12
                = check_box_tag 'suburb_', 'suburb', checked = saved_search_column_visibility('suburb_'), class: 'i-checks'
                = label_tag 'suburb_', t('datagrid.columns.suburb')

            %li
              .visibility.col-sm-12
                = check_box_tag 'description_house_landmark_', 'description_house_landmark', checked = saved_search_column_visibility('description_house_landmark_'), class: 'i-checks'
                = label_tag 'description_house_landmark_', t('datagrid.columns.description_house_landmark')

            %li
              .visibility.col-sm-12
                = check_box_tag 'directions_', 'directions', checked = saved_search_column_visibility('directions_'), class: 'i-checks'
                = label_tag 'directions_', t('datagrid.columns.directions')

          - if selected_country == 'myanmar'
            %li
              .visibility.col-sm-12
                = check_box_tag 'street_line1_', 'street_line1', checked = saved_search_column_visibility('street_line1_'), class: 'i-checks'
                = label_tag 'street_line1_', t('datagrid.columns.street_line1')

            %li
              .visibility.col-sm-12
                = check_box_tag 'street_line2_', 'street_line2', checked = saved_search_column_visibility('street_line2_'), class: 'i-checks'
                = label_tag 'street_line2_', t('datagrid.columns.street_line2')

            %li
              .visibility.col-sm-12
                = check_box_tag 'state_', 'state', checked = saved_search_column_visibility('state_'), class: 'i-checks'
                = label_tag 'state_', t('datagrid.columns.state')

            %li
              .visibility.col-sm-12
                = check_box_tag 'township_', 'township', checked = saved_search_column_visibility('township_'), class: 'i-checks'
                = label_tag 'township_', t('datagrid.columns.township')

          - if selected_country == 'thailand'
            %li
              .visibility.col-sm-12
                = check_box_tag 'plot_', 'plot', checked = saved_search_column_visibility('plot_'), class: 'i-checks'
                = label_tag 'plot_', t('datagrid.columns.plot')

            %li
              .visibility.col-sm-12
                = check_box_tag 'road_', 'road', checked = saved_search_column_visibility('road_'), class: 'i-checks'
                = label_tag 'road_', t('datagrid.columns.road')

            %li
              .visibility.col-sm-12
                = check_box_tag 'subdistrict_', 'subdistrict', checked = saved_search_column_visibility('subdistrict_'), class: 'i-checks'
                = label_tag 'subdistrict_', t('datagrid.columns.subdistrict')

            %li
              .visibility.col-sm-12
                = check_box_tag 'postal_code_', 'postal_code', checked = saved_search_column_visibility('postal_code_'), class: 'i-checks'
                = label_tag 'postal_code_', t('datagrid.columns.postal_code')

          -# %li
          -#   .visibility.col-sm-12
          -#     = check_box_tag 'time_in_care_', 'time_in_care', checked = default_setting('time_in_care_', @client_default_columns) || params[:time_in_care_].present?, class: 'i-checks'
          -#     = label_tag 'time_in_care_', t('datagrid.columns.time_in_care')

          %li
            .visibility.col-sm-12
              = check_box_tag 'time_in_cps_', 'time_in_cps', checked = saved_search_column_visibility('time_in_cps_'), class: 'i-checks'
              = label_tag 'time_in_cps_', t('datagrid.columns.time_in_cps')

          %li
            .visibility.col-sm-12
              = check_box_tag 'time_in_ngo_', 'time_in_ngo', checked = saved_search_column_visibility('time_in_ngo_'), class: 'i-checks'
              = label_tag 'time_in_ngo_', t('datagrid.columns.time_in_ngo')

          %li
            .visibility.col-sm-12
              = check_box_tag 'indirect_beneficiaries_', 'indirect_beneficiaries', checked = saved_search_column_visibility('indirect_beneficiaries_'), class: 'i-checks'
              = label_tag 'indirect_beneficiaries_', t('datagrid.columns.clients.indirect_beneficiaries')

          %li
            .visibility.col-sm-12
              = check_box_tag 'rejected_note_', 'rejected_note', checked = saved_search_column_visibility('rejected_note_'), class: 'i-checks'
              = label_tag 'rejected_note_', t('datagrid.columns.rejected_note')
          %li
            .visibility.col-sm-12
              = check_box_tag 'exit_reasons_', 'exit_reasons', checked = saved_search_column_visibility('exit_reasons_'), class: 'i-checks'
              = label_tag 'exit_reasons_', t('datagrid.columns.exit_reasons')
          %li
            .visibility.col-sm-12
              = check_box_tag 'exit_circumstance_', 'exit_circumstance', checked = saved_search_column_visibility('exit_circumstance_'), class: 'i-checks'
              = label_tag 'exit_circumstance_', t('datagrid.columns.exit_circumstance')
          %li
            .visibility.col-sm-12
              = check_box_tag 'other_info_of_exit_', 'other_info_of_exit', checked = saved_search_column_visibility('other_info_of_exit_'), class: 'i-checks'
              = label_tag 'other_info_of_exit_', t('datagrid.columns.other_info_of_exit')
          %li
            .visibility.col-sm-12
              = check_box_tag 'exit_note_', 'exit_note', checked = saved_search_column_visibility('exit_note_'), class: 'i-checks'
              = label_tag 'exit_note_', t('datagrid.columns.exit_note')

          - if policy(Client).show?(:what3words)
            %li
              .visibility.col-sm-12
                = check_box_tag 'what3words_', 'what3words', checked = saved_search_column_visibility('what3words_'), class: 'i-checks'
                = label_tag 'what3words_', t('datagrid.columns.what3words')

          - if policy(Client).show?(:school_info)
            %li
              .visibility.col-sm-12
                = check_box_tag 'main_school_contact_', 'main_school_contact', checked = saved_search_column_visibility('main_school_contact_'), class: 'i-checks'
                = label_tag 'main_school_contact_', t('datagrid.columns.main_school_contact')


          - if current_setting.country_name == "cambodia"
            %li
              .visibility.col-sm-12
                = check_box_tag 'rated_for_id_poor_', 'rated_for_id_poor', checked = saved_search_column_visibility('rated_for_id_poor_'), class: 'i-checks'
                = label_tag 'rated_for_id_poor_', t('datagrid.columns.rated_for_id_poor')
          -# %li
          -#   .visibility.col-sm-12
          -#     = check_box_tag 'name_of_referee_', 'name_of_referee', checked = saved_search_column_visibility(check_box_tag 'name_of_referee_), class: 'i-checks'
          -#     = label_tag 'name_of_referee_', t('datagrid.columns.name_of_referee')
          %li
            .visibility.col-sm-12
              = check_box_tag 'family_', 'family', checked = saved_search_column_visibility('family_'), class: 'i-checks'
              = label_tag 'family_', t('datagrid.columns.family')
          %li
            .visibility.col-sm-12
              = check_box_tag 'family_id_', 'family', checked = saved_search_column_visibility('family_id_'), class: 'i-checks'
              = label_tag 'family_id_', t('datagrid.columns.family_id')
          %li
            .visibility.col-sm-12
              = check_box_tag 'family_type_', 'family', checked = saved_search_column_visibility('family_type_'), class: 'i-checks'
              = label_tag 'family_type_', t('datagrid.columns.families.family_type')
          %li
            .visibility.col-sm-12
              = check_box_tag 'case_note_date_', 'case_note_date', checked = saved_search_column_visibility('case_note_date_'), class: 'i-checks'
              = label_tag 'case_note_date_', t('datagrid.columns.case_note_date')
          %li
            .visibility.col-sm-12
              = check_box_tag 'case_note_type_', 'case_note_type', checked = saved_search_column_visibility('case_note_type_'), class: 'i-checks'
              = label_tag 'case_note_type_', t('datagrid.columns.case_note_type')
          %li
            .visibility.col-sm-12
              = check_box_tag 'referee_relationship_to_client_', 'referee_relationship_to_client', checked = saved_search_column_visibility('referee_relationship_to_client_'), class: 'i-checks'
              = label_tag 'referee_relationship_to_client_', t('datagrid.columns.referee_relationship_to_client')
          %li
            .visibility.col-sm-12
              = check_box_tag 'client_phone_', 'client_phone', checked = saved_search_column_visibility('client_phone_'), class: 'i-checks'
              = label_tag 'client_phone_', t('datagrid.columns.clients.client_phone')
          %li
            .visibility.col-sm-12
              = check_box_tag 'address_type_', 'address_type', checked = saved_search_column_visibility('address_type_'), class: 'i-checks'
              = label_tag 'address_type_', t('datagrid.columns.address_type')
          %li
            .visibility.col-sm-12
              = check_box_tag 'client_email_', 'client_email', checked = saved_search_column_visibility('client_email_'), class: 'i-checks'
              = label_tag 'client_email_', t('datagrid.columns.client_email')
          %li
            .visibility.col-sm-12
              = check_box_tag 'phone_owner_', 'phone_owner', checked = saved_search_column_visibility('phone_owner_'), class: 'i-checks'
              = label_tag 'phone_owner_', t('datagrid.columns.phone_owner')

          - if policy(Client).show_legal_doc?
            %li.legal-doc
              %strong= t('clients.show.legal_documents')
            - legal_doc_fields.each do |field|
              %li
                .visibility.col-sm-12
                  = check_box_tag "#{field}_", field, checked = saved_search_column_visibility("#{field}_"), class: 'i-checks'
                  = label_tag "#{field}_", t("clients.show.#{field}")
          #custom-referral-data
            - if @quantitative_fields
              %li.custom-referral-data
                %strong= t('advanced_search.fields.quantitative')
              - QuantitativeType.cach_by_visible_on('client').each do |quantitative_type|
                - next unless quantitative_type_readable?(quantitative_type.id)
                %li
                  .visibility.col-sm-12
                    = check_box_tag "#{quantitative_type.name}_", quantitative_type.name, checked = saved_search_column_visibility("#{quantitative_type.name}_"), class: 'i-checks'
                    = label_tag "#{quantitative_type.name}_", quantitative_type.name
            - custom_data = CustomData.first
            - if custom_data.present?
              %li.custom-data
                %strong= t('custom_data.title')
                - custom_data.searchable_fields.each do |field|
                  %li
                    .visibility.col-sm-12
                      = check_box_tag "#{field['name']}_", field['label'], checked = saved_search_column_visibility("#{field['name']}_"), class: 'i-checks'
                      = label_tag "#{field['name']}_", field['label']

          = render 'datagrid/care_plan_column_picker'
          - if Service.count > 0
            %li.type-of-service-header
              %strong= t('.type_of_service')
            %li
              .visibility.col-sm-12
                = check_box_tag 'type_of_service_', 'type_of_service', checked = saved_search_column_visibility('type_of_service_'), class: 'i-checks'
                = label_tag 'type_of_service_', t('datagrid.columns.type_of_service')

          - if policy(Client).show?(:referee_info)
            %li.referee-header
              %strong= t('.referee')
            %li
              .visibility.col-sm-12
                = check_box_tag 'referee_name_', 'referee_name', checked = saved_search_column_visibility('referee_name_'), class: 'i-checks'
                = label_tag 'referee_name_', t('datagrid.columns.referee_name')
            %li
              .visibility.col-sm-12
                = check_box_tag 'referee_email_', 'referee_email', checked = saved_search_column_visibility('referee_email_'), class: 'i-checks'
                = label_tag 'referee_email_', t('datagrid.columns.referee_email')
            %li
              .visibility.col-sm-12
                = check_box_tag 'referee_phone_', 'referee_phone', checked = saved_search_column_visibility('referee_phone_'), class: 'i-checks'
                = label_tag 'referee_phone_', t('datagrid.columns.referee_phone')

          - if policy(Client).show?(:carer_info)
            %li.carer-header
              %strong= t('.carer')
            %li
              .visibility.col-sm-12
                = check_box_tag 'carer_name_', 'carer_name', checked = saved_search_column_visibility('carer_name_'), class: 'i-checks'
                = label_tag 'carer_name_', t('datagrid.columns.carer_name')
            %li
              .visibility.col-sm-12
                = check_box_tag 'carer_email_', 'carer_email', checked = saved_search_column_visibility('carer_email_'), class: 'i-checks'
                = label_tag 'carer_email_', t('datagrid.columns.carer_email')
            %li
              .visibility.col-sm-12
                = check_box_tag 'carer_phone_', 'carer_phone', checked = saved_search_column_visibility('carer_phone_'), class: 'i-checks'
                = label_tag 'carer_phone_', t('datagrid.columns.carer_phone')
            %li
              .visibility.col-sm-12
                = check_box_tag 'carer_relationship_to_client_', 'carer_relationship_to_client', checked = saved_search_column_visibility('carer_relationship_to_client_'), class: 'i-checks'
                = label_tag 'carer_relationship_to_client_', t('datagrid.columns.clients.carer_relationship_to_client')

            = render 'datagrid/risk_assessment_column_picker'

            %li.divider.col-xs-12
          %li
            .visibility.col-sm-12
              = check_box_tag 'manage_', 'manage', checked = saved_search_column_visibility('manage_'), class: 'i-checks'
              = label_tag 'manage_', t('datagrid.columns.manage')
          %li
            .visibility.col-sm-12
              = check_box_tag 'changelog_', 'changelog', checked = saved_search_column_visibility('changelog_'), class: 'i-checks'
              = label_tag 'changelog_', t('datagrid.columns.changelog')

  - elsif controller_name == 'families' || controller_name == 'partners'
    %ul.check-columns-visibility{ 'aria-labelledby': 'dropdownMenuDivider' }
      %li.dropdown
        %a.dropdown-toggle.btn.btn-default{'data-toggle' => 'dropdown', href: '#'}
          = t('datagrid.columns.select_columns')
          %span.caret

        %ul.dropdown-menu.columns-visibility
          %li
            .input-group
              %input.form-control.column-search-box{ placeholder: "Search", id: "box" }
              %span.input-group-btn
                %button.btn.btn-default.btn-clear-text{ type: "button" }
                  %i.fa.fa-close
          %li
            .all-visibility.col-sm-12
              = check_box_tag 'all_', 'all', checked = params['all_'].present?, class: 'i-checks all_'
              = label_tag 'all_' do
                %strong= t('datagrid.columns.show_all')
          - if controller_name == 'partners'
            - grid.filters.each do |f|
              %li
                .visibility.col-sm-12
                  = check_box_tag "#{f.name}_", f.name, checked = default_setting("#{f.name}_", @default_columns) || params["#{f.name}_"].present? || grid.columns.map(&:name).include?(f.name.to_sym), class: 'i-checks'
                  = columns_partners_visibility f.name
          - if controller_name == 'families'
            - grid.filters.each do |f|
              - field_name = f.name
              - field_name = 'member_count' if field_name.to_s.include?('significant_family_member_count')
              - next unless policy(Family).show?(field_name)
              - next if skipped_assessment_tool_fields.include?(f.name) || (list_family_fields.include?(f.name) && family_hidden_fields_setting.exclude?(f.name))

              %li
                .visibility.col-sm-12
                  = check_box_tag "#{f.name}_", f.name, checked = default_setting("#{f.name}_", @default_columns) || params["#{f.name}_"].present?, class: 'i-checks'
                  = columns_family_visibility f.name

            - family_hidden_fields_setting.each do |field_name|
              %li
                .visibility.col-sm-12
                  = check_box_tag "#{field_name}_", field_name, checked = default_setting("#{field_name}_", @default_columns) || params["#{field_name}_"].present?, class: 'i-checks'
                  = columns_family_visibility(field_name)

            %li
              .visibility.col-sm-12
                = check_box_tag 'member_count_', 'member_count', checked = default_setting('member_count_', @default_columns) || params[:member_count_].present?, class: 'i-checks'
                = label_tag 'member_count_', t('datagrid.columns.families.member_count')

            %li
              .visibility.col-sm-12
                = check_box_tag 'relation_', 'relation', checked = default_setting('relation_', @default_columns) || params[:relation_].present?, class: 'i-checks'
                = label_tag 'relation_', t('families.family_member_fields.relation')

            %li
              .visibility.col-sm-12
                = check_box_tag 'clients_', 'clients', checked = default_setting('clients_', @default_columns) || params[:clients_].present?, class: 'i-checks'
                = label_tag 'clients_', t('datagrid.columns.families.clients')

            %li
              .visibility.col-sm-12
                = check_box_tag 'direct_beneficiaries_', 'direct_beneficiaries', checked = default_setting('direct_beneficiaries_', @default_columns) || params[:direct_beneficiaries_].present?, class: 'i-checks'
                = label_tag 'direct_beneficiaries_', t('datagrid.columns.families.direct_beneficiaries')
          = render 'datagrid/quantitative_type_column_pickers'
          - unless current_setting.hide_family_case_management_tool?
            %li
              .visibility.col-sm-12
                = check_box_tag 'case_workers_', 'case_workers', checked = default_setting('case_workers_', @default_columns) || params[:case_workers_].present?, class: 'i-checks'
                = label_tag 'case_workers_', t('datagrid.columns.families.case_workers')
            %li
              .visibility.col-sm-12
                = check_box_tag 'case_note_date_', 'case_note_date', checked = family_saved_search_column_visibility('case_note_date_'), class: 'i-checks'
                = label_tag 'case_note_date_', t('datagrid.columns.case_note_date')
            %li
              .visibility.col-sm-12
                = check_box_tag 'case_note_type_', 'case_note_type', checked = family_saved_search_column_visibility('case_note_type_'), class: 'i-checks'
                = label_tag 'case_note_type_', t('datagrid.columns.case_note_type')
            = render 'datagrid/care_plan_column_picker'
            = render 'datagrid/quantitative_type_column_pickers'
            = render partial: 'datagrid/family_custom_domain_score', locals: { custom_domains: Domain.family_custom_csi_domains.order_by_identity }

          %li.divider.col-xs-12
          %li
            .visibility.col-sm-12
              = check_box_tag 'manage_', 'manage', checked = default_setting('manage_', @default_columns) || params[:manage_].present?, class: 'i-checks'
              = label_tag 'manage_', t('datagrid.columns.families.manage')
          %li
            .visibility.col-sm-12
              = check_box_tag 'changelog_', 'changelog', checked = default_setting('changelog_', @default_columns) || params[:changelog_].present?, class: 'i-checks'
              = label_tag 'changelog_', t('datagrid.columns.families.changelog')
  - elsif controller_name == 'communities'
    %ul.check-columns-visibility{ 'aria-labelledby': 'dropdownMenuDivider' }
      %li.dropdown
        %a.dropdown-toggle.btn.btn-default{ href: '#', data: { toggle: 'dropdown', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.select_columns')}", placement: "right" } }
          = t('datagrid.columns.select_columns')
          %span.caret
        .float-right.pull-right
          %span.p-xs.b-r-sm.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
            = check_box_tag 'no_case_note_check_box', 'no_case_note_check_box', checked = check_params_no_case_note, class: 'i-checks'
            %label=t('.no_case_note')
          %span.p-xs.b-r-sm.m-l.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
            = check_box_tag 'overdue-forms', 'overdue-forms', checked = check_params_has_over_forms, class: 'i-checks'
            %label=t('.has_overdue_forms')
          - if enable_any_csi_tools?
            %span.p-xs.b-r-sm.m-l.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
              = check_box_tag 'overdue-assessment', 'overdue-assessment', checked = check_params_has_over_assessment, class: 'i-checks'
              %label=t('.has_overdue_assessment', assessment: t('clients.show.assessment'))
          %span.p-xs.b-r-sm.m-l.btn.btn-sm.btn-default{ data: { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.overdue_filter_checkboxes')}", placement: "auto" } }
            = check_box_tag 'overdue-task', 'overdue-task', checked = check_params_has_overdue_task, class: 'i-checks'
            %label=t('.has_overdue_task')

        %ul.dropdown-menu.columns-visibility
          %li
            .all-visibility.col-sm-12
              = check_box_tag 'all_', 'all', checked = params['all_'].present? || saved_search_column_visibility('all_'), class: 'i-checks all_'
              = label_tag 'all_' do
                %strong= t('datagrid.columns.show_all')

          - community_grid_columns.each do |k, header_name|
            - next if k == :assessments_due_to || k == :no_case_note || k == :overdue_task || k == :overdue_forms
            - next if controller_name == 'clients' && !policy(Client).show?(k.to_s)

            - unless selected_country == 'cambodia'
              - next if k.in?([:commune, :village, :street_number, :house_number, :current_address])

            - unless selected_country.in?(['cambodia', 'thailand'])
              - next if k.in?([:province_id, :birth_province_id, :district])

            %li{ id: k.to_s }
              .visibility.col-sm-12
                = check_box_tag "#{k}_", k, checked = selected_commuity_column("#{k}_"), class: 'i-checks'
                = header_name

          = render 'datagrid/quantitative_type_column_pickers'

          %li
            .visibility.col-sm-12
              = check_box_tag 'manage_', 'manage', checked =  default_setting('manage_', @default_columns) || params[:manage_].present?, class: 'i-checks'
              = label_tag 'manage_', t('datagrid.columns.manage')
          / %li
          /   .visibility.col-sm-12
          /     = check_box_tag 'changelog_', 'changelog', checked =  default_setting('changelog_', @default_columns) || params[:changelog_].present?, class: 'i-checks'
          /     = label_tag 'changelog_', t('datagrid.columns.changelog')

  #filter_form
    %hr/
    .row
      - if controller_name == 'families'
        = render partial: 'datagrid/filter_form/family', locals: { f: f, grid: grid, options: options }
      - else
        - grid.filters.each do |filter|
          - next if controller_name == 'clients' && (!filter.name.to_s.in?(%w(given_name family_name gender slug status user_id)) || !policy(Client).show?(filter.name.to_s))

          .datagrid-filter.filter.form-group.col-xs-12.col-sm-6.col.md-4.col-lg-4
            = f.datagrid_label filter
            - if filter.type == :date
              = f.datagrid_filter filter, partials: options[:partials], class: "form-control datepicker #{filter.options[:class]}"
            - else
              = f.datagrid_filter filter, partials: options[:partials], class: "form-control #{filter.options[:class]}"

    .row
      .col-xs-12
        .datagrid-actions
          = f.submit I18n.t('datagrid.form.search').html_safe, class: 'btn btn-primary datagrid-submit', id: 'client-grid-search-btn'
          - empty_parameter = Rails.version >= '4.1.0' && Rails.version <= '4.1.2' ? nil : {}
          - grid_path = grid.to_param == 'client_grid' ? clients_url : url_for(grid.to_param => empty_parameter)
          - grid_path = grid.to_param == 'family_grid' ? families_url : grid_path
          = link_to I18n.t('datagrid.form.reset').html_safe, grid_path, :class => 'btn btn-default btn-outline datagrid-reset', data: controller_name == 'clients' && { toggle: 'popover', trigger: "hover", html: 'true', content: "#{I18n.t('inline_help.clients.index.buttons.reset')}", placement: "right" }
