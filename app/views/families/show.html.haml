- if Organization.current.short_name == 'demo' || Organization.current.short_name == 'tutorials'
  - ngos = Organization.test_ngos.exclude_current.order(:full_name).map{|org| [org.full_name, org.short_name] }
- else
  - ngos = Organization.exclude_current.oscar.order(:full_name).map{|org| [org.full_name, org.short_name] }
- ngos = mapping_ngos(ngos)

.row
  .col-xs-12.family
    .btn-group.small-btn-margin
      %button.btn-sm.btn.btn-success.dropdown-toggle{ 'data-toggle' => 'dropdown', class: ('disabled' if @group_family_custom_fields.empty?) }
        = t('.additional_forms')
        %span.caret
      %ul.dropdown-menu.scrollable-dropdown-menu
        - @group_family_custom_fields.each do |_, family_custom_fields|
          %li
            %p= link_to family_custom_fields.first.custom_field.form_title, family_custom_field_properties_path(@family, custom_field_id: family_custom_fields.first.custom_field_id)

    - if can? :manage, CustomFieldProperty
      .btn-group.small-btn-margin
        %button.btn-sm.btn.btn-success.dropdown-toggle{ 'data-toggle' => 'dropdown', class: ('disabled' if @free_family_forms.empty?) }
          = t('.add_form')
          %span.caret
        %ul.dropdown-menu.scrollable-dropdown-menu
          - @free_family_forms.each do |custom_field|
            %li
              %p= link_to custom_field.form_title, new_family_custom_field_property_path(@family, custom_field_id: custom_field)
      - if current_organization.available_for_referral?
        %input#family-id{ value: "#{@family.id}", type: 'hidden' }
          .btn-group.small-btn-margin
            %button.btn-sm.btn.btn-warning.dropdown-toggle.btn-fit{ data: { toggle: "dropdown", html: 'true', trigger: 'hover', content: "#{I18n.t('inline_help.families.show.referral_form')}", placement: "auto" }, class: ('disabled' if @family.family_referrals.empty?) }
              = t('.referral_forms')
              %span.caret
            %ul.dropdown-menu.btn-fit.scrollable-dropdown-menu.referral-forms
              %li= link_to t('.referred_to'), family_family_referrals_path(@family, referral_type: 'referred_to')
              %li= link_to t('.referred_from'), family_family_referrals_path(@family, referral_type: 'referred_from')
              
        .btn-group.small-btn-margin
          %button.btn-sm.btn.btn-warning.dropdown-toggle.btn-fit#add-referral-btn{ data: { toggle: "dropdown", html: 'true', trigger: 'hover', content: "#{I18n.t('inline_help.families.show.refer_family')}", placement: "auto" } }
            = t('.refer_family')
            %span.caret
          %ul.dropdown-menu.btn-fit.scrollable-dropdown-menu.referral-forms
            - ngos.each do |value, key|
              %li= link_to value, new_family_family_referral_url(@family, ngo: key, external_ngo_name: key == 'external referral' && value), :class => 'target-ngo', :value => "#{key}", :id => "#{key}"

    - if @family.enrollments.active.count > 0
      = link_to family_enrolled_programs_path(@family), data: { toggle: "popover", html: 'true', trigger: 'hover', content: "#{I18n.t('inline_help.families.show.active_program')}", placement: "auto" } do
        .btn.btn-primary.small-btn-margin.btn-sm.btn-fit= t('.enrolled_program_streams')
    - else
      .btn.btn-primary.small-btn-margin.btn-sm.disabled.btn-fit{ data: { toggle: "popover", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.families.show.active_program')}", placement: "auto" } }
        = t('.enrolled_program_streams')
    = link_to family_enrollments_path(@family), data: { toggle: "popover", html: 'true', trigger: "hover", content: "#{I18n.t('inline_help.families.show.enroll_program')}", placement: "auto" } do
      .btn.btn-primary.small-btn-margin.btn-sm.btn-fit= t('.program_streams')

    .ibox.mini-margin
      .ibox-title
        %h5= "#{t('.general_info')} #{@family.name}"
        .ibox-tools
          %a.collapse-link
            .btn.btn-outline.btn-primary
              %i.fa.fa-chevron-up
          - if can? :manage, Family
            %small
              = link_to edit_family_path(@family) do
                .btn.btn-outline.btn-success
                  %i.fa.fa-pencil
              = remove_link(@family, { family_case: @results || 0 }, 'btn-md')

      .ibox-content
        .row.family-summary
          .col-sm-12
            %table.table.table-bordered
              %tr
                %td.spacing-first-col
                  = t('.code')
                %td
                  %strong
                    = @family.code
              %tr
                %td.spacing-first-col
                  = t('.case_history')
                %td
                  %strong
                    = family_case_history(@family)

              - if policy(@family).show?(:province_id)
                %tr
                  %td.spacing-first-col
                    = t('.address')
                  %td
                    %strong
                      = merged_address_family(@family)
              %tr
                %td.spacing-first-col
                  = t('.member_count')
                %td
                  %strong
                    = pluralize(@family.member_count, 'Person')

              %tr
                %td.spacing-first-col
                  = t('.caregiver_information')
                %td
                  %strong
                    = @family.caregiver_information

              - if policy(@family).show?(:member_count)
                %tr
                  %td.spacing-first-col
                    = t('.significant_family_member_count')
                  %td
                    %strong
                      = @family.significant_family_member_count

              - if policy(@family).show?(:household_income)
                %tr
                  %td.spacing-first-col
                    = t('.household_income')
                  %td
                    %strong
                      = @family.household_income

              - if policy(@family).show?(:dependable_income)
                %tr
                  %td.spacing-first-col
                    = "#{t('.dependable_income')}?"
                  %td
                    %strong
                      = human_boolean(@family.dependable_income)

              %tr
                %td.spacing-first-col
                  = t('.female_children_count')
                %td
                  %strong
                    = @family.female_children_count.to_i

              %tr
                %td.spacing-first-col
                  = t('.male_children_count')
                %td
                  %strong
                    = @family.male_children_count.to_i

              %tr
                %td.spacing-first-col
                  = t('.female_adult_count')
                %td
                  %strong
                    = @family.female_adult_count.to_i

              %tr
                %td.spacing-first-col
                  = t('.male_adult_count')
                %td
                  %strong
                    = @family.male_adult_count.to_i

              - if policy(@family).show?(:contract_date)
                %tr
                  %td.spacing-first-col
                    = t('.contract_date')
                  %td
                    %strong
                      = date_format(@family.contract_date)

              - if policy(@family).show?(:family_type)
                %tr
                  %td.spacing-first-col
                    = t('.family_type')
                  %td
                    %strong
                      = family_type_translation(@family.family_type)
              %tr
                %td.spacing-first-col
                  = t('.status')
                %td
                  %strong
                    = @family.status
        - if @family.family_members.present?
          .row.family-summary
            .col-sm-12
              %table.table.table-bordered
                %thead
                  %th= t('activerecord.attributes.family_member.adult_name')
                  %th= t('.date_of_birth')
                  - if policy(FamilyMember).show?(:gender)
                    %th= t('activerecord.attributes.family_member.gender')
                  - if policy(FamilyMember).show?(:occupation)
                    %th= t('.occupation')
                  - if policy(FamilyMember).show?(:relation)
                    %th= t('.relation')
                  - if policy(FamilyMember).show?(:guardian)
                    %th= t('.guardian')
                  - if policy(FamilyMember).show?(:note)
                    %th= t('.note')
                %tbody
                - @family.family_members.each do |member|
                  %tr
                    %td= member.adult_name
                    %td= date_format member.date_of_birth
                    - if policy(FamilyMember).show?(:gender)
                      %td
                        - if member.gender?
                          = t("enumerize.defaults.gender.#{member.gender&.gsub('other', 'other_gender')}")
                    - if policy(FamilyMember).show?(:occupation)
                      %td= member.occupation
                    - if policy(FamilyMember).show?(:relation)
                      %td= member.relation
                    - if policy(FamilyMember).show?(:guardian)
                      %td= human_boolean(member.guardian)
                    - if policy(FamilyMember).show?(:note)
                      %th= member.note

.row
  .col-xs-12.clients
    .ibox
      - if children_exist?
        .ibox-title
          %h5= @results
          %span.label.label-info= t('.results')
        .ibox-content
          .clients-table{ data: { 'read-more': t('.read_more'), 'read-less': t('.read_less') } }
            = datagrid_table @client_grid, html: { class: 'table table-bordered table-striped table-hover clients'}
        .ibox-footer.text-center
          = paginate @client_grid.assets
      - else
        .ibox-title
          %h5 0
          %span.label.label-info= t('.results')
        .ibox-content
          %p= t('families.family_advanced_searches.advanced_search.no_result')

.row
  = render 'family_referrals/confirm_referral'
