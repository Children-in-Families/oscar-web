= simple_form_for(@family) do |f|
  .ibox-content
    = error_notification(f)
    .form-inputs
      .row
        .col-xs-12.col-sm-6.col-md-4
          .form-group.string.optional.family_name
            %label.string.optional.control-label{:for => "family_name"}
              = t('.name')
            %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "focus", content: "#{I18n.t('inline_help.families.name')}", placement: "right" } }
              = fa_icon "info-circle", class: 'text-info m-xs'
            = f.input :name, wrapper: false, label: false
        .col-xs-12.col-sm-6.col-md-4
          .form-group.string.optional.family_code
            %label.string.optional.control-label{:for => "family_code"}
              = t('.code')
            %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "focus", content: "#{I18n.t('inline_help.families.family_id')}", placement: "auto" } }
              = fa_icon "info-circle", class: 'text-info m-xs'
            = f.input :code, label: false, wrapper: false

        - if policy(@family).show?(:family_type)
          .col-xs-12.col-sm-6.col-md-4
            .form-group.select.required.family_family_type
              .form-group.select.required.family_status
                %label.select.required.control-label{:for => "family_family_type"}
                  %abbr{:title => "required"} *
                  = t('.family_type')
                %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "focus", html: 'true', content: "#{I18n.t('inline_help.families.family_type')}", placement: "auto" } }
                  = fa_icon "info-circle", class: 'text-info m-xs'
              = f.input :family_type, collection: Family.mapping_family_type_translation, label_method: :second, value_method: :first, label: false, wrapper: false

        .col-xs-12.col-sm-6.col-md-4
          %label.select.required.control-label{:for => "family_status"}
            %abbr{:title => "required"} *
            = t('.status')
          %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "focus", html: 'true', content: "#{I18n.t('inline_help.families.status')}", placement: "right" } }
            = fa_icon "info-circle", class: 'text-info m-xs'
          = f.input :status, collection: Family::STATUSES, label: false
        .col-xs-12.col-sm-6.col-md-4
          .form-group.string.optional.family_case_history
            %label.string.optional.control-label{:for => "family_case_history"}
              = t('.case_history')
            %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "focus", html: 'true', content: "#{I18n.t('inline_help.families.case_history')}", placement: "auto" } }
              = fa_icon "info-circle", class: 'text-info m-xs'
            = f.input :case_history, label: false
        -# .col-xs-12.col-sm-6.col-md-4= f.input :address, input_html: { rows: '4' }, label: t('.address'), readonly: true

        - if policy(@family).show?(:province_id)
          .col-xs-12.col-sm-6.col-md-4
            = f.association :province, collection: @provinces, label: t('.province'), input_html: { data: { type: 'provinces', 'subaddress' => 'district' } }

        - if policy(@family).show?(:district_id)
          .col-xs-12.col-sm-6.col-md-4
            = f.association :district, collection: @districts, label: t('.district'), input_html: { data: { type: 'districts', 'subaddress' => 'commune' } }

        - if policy(@family).show?(:commune_id)
          .col-xs-12.col-sm-6.col-md-4
            = f.association :commune, collection: @communes.map{|c| [c.name, c.id] }, label: t('.commune'), input_html: { data: { type: 'communes', 'subaddress' => 'village' } }, hint: (@family.old_commune if @family.commune_id.nil?)

        - if policy(@family).show?(:village_id)
          .col-xs-12.col-sm-6.col-md-4
            = f.association :village, collection: @villages.map{|v| [v.name, v.id] }, label:t('.village'), input_html: { data: { type: 'villages' } }, hint: (@family.old_village if @family.village_id.nil?)

        - if policy(@family).show?(:street)
          .col-xs-12.col-sm-6.col-md-4.famliy-street
            = f.input :street, label: t('.street')

        - if policy(@family).show?(:house)
          .col-xs-12.col-sm-6.col-md-4= f.input :house, label: t('.house')

        - if policy(@family).show?(:member_count)
          .col-xs-12.col-sm-6.col-md-4= f.input :significant_family_member_count, label: t('.significant_family_member_count')
          .col-xs-12.col-sm-6.col-md-4= f.input :female_children_count, label: t('.female_children_count')
          .col-xs-12.col-sm-6.col-md-4= f.input :male_children_count, label: t('.male_children_count')
          .col-xs-12.col-sm-6.col-md-4= f.input :female_adult_count, label: t('.female_adult_count')
          .col-xs-12.col-sm-6.col-md-4= f.input :male_adult_count, label: t('.male_adult_count')


        .col-xs-12.col-sm-6.col-md-4= f.input :children, collection: @clients.map { |client| [client.en_and_local_name.present? ? client.en_and_local_name : 'Unknown', client.id] }, selected: selected_clients, input_html: { multiple: true }, label: t('.children')

        - if policy(@family).show?(:contract_date)
          .col-xs-12.col-sm-6.col-md-4.form-group.date.optional.family_contract_date
            %label.date.optional.control-label{ for: 'family_contract_date' }= t('.contract_date')
            .input-group.date
              = f.text_field :contract_date, class: 'date optional form-control date-picker', type: 'text', name: 'family[contract_date]', id: 'family_contract_date'
              %span.input-group-addon
                %i.fa.fa-calendar-check-o

        - if policy(@family).show?(:household_income)
          .col-xs-12.col-sm-6.col-md-4= f.input :household_income, label: t('.household_income')

        - if policy(@family).show?(:dependable_income)
          .col-xs-12.col-sm-6.col-md-4
            .i-checks.dependable-income
              %label= t('.dependable_income')
              = f.input :dependable_income, as: :radio_buttons, collection: [[t('.yes'), true],[t('.no'), false]], label: false
        .col-xs-12.col-sm-6.col-md-4
          .form-group.text.optional.family_caregiver_information
            %label.text.optional.control-label{:for => "family_caregiver_information"}
              = t('.caregiver_information')
            %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "focus", html: 'true', content: "#{I18n.t('inline_help.families.caregiver_info')}", placement: "right" } }
              = fa_icon "info-circle", class: 'text-info m-xs'
            = f.input :caregiver_information, input_html: { rows: 5 }, label: false

      .row
        .col-xs-12
          #family-members
            .panel.panel-default
              .panel-heading
                %h5
                  = t('.family_members')
                  %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "focus", html: 'true', content: "#{I18n.t('inline_help.families.family_member')}", placement: "right" } }
                    = fa_icon "info-circle", class: 'text-info m-xs'
              .panel-body
                = f.simple_fields_for :family_members do |member|
                  = render 'family_member_fields', f: member
                .links
                  = link_to_add_association t('.add_new_member'), f, :family_members, class: 'btn btn-primary add_new_member'


  .ibox-footer
    = f.submit t('save'), class: 'btn btn-primary form-btn', data: { disable_with: t('saving') }
    - if @family.persisted?
      = link_to t('cancel'), family_path(@family), class: 'btn btn-default form-btn'
    - else
      = link_to t('cancel'), families_path, class: 'btn btn-default form-btn'
