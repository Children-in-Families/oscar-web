= simple_form_for([@client, @progress_note], html: {class: 'progress-note dropzone', multipart: true, style:"border: 0;"}) do |f|
  = hidden_field(:progress_note, :id, value: @progress_note.id) if @progress_note.persisted?
  = hidden_field(:progress_note, :error_text, value: t('cannot_be_blank'))
  = error_notification(f)
  .row
    .col-xs-12.col-md-4
      .form-group.date.progress_note_date{ class: ('has-error' if f.error :date) }
        %label.date.required.control-label{ for: 'progress_note_date' }
          %abbr{ title: 'required' } *
          = t('.date')
        .input-group.date
          = f.text_field :date, required: true, class: 'date form-control date-picker datepicker-dropdown date', type: 'text', name: 'progress_note[date]', id: 'progress_note_date'
          %span.input-group-addon
            %i.fa.fa-calendar-check-o
        = f.error :date

    .col-xs-12.col-md-4
      = f.input :client, disabled: true, input_html: { class: 'form-control', value: @client.name }, label: t('.child')
    .col-xs-12.col-md-4
      = f.association :user, collection: @case_workers, input_html: { class: 'form-control' }, label: t('.staff')
  .row
    .col-xs-12.col-md-4
      = f.association :progress_note_type, collection: @progress_note_types.map{ |t| [t.note_type, t.id] }, input_html: { class: 'form-control' }, label: t('.progress_note_type')
    .col-xs-12.col-md-4
      = f.association :location, collection: @locations.map{ |l| [l.name, l.id] }, input_html: { class: 'form-control' }, label: t('.location')
    .col-xs-12.col-md-4
      = f.input :other_location, input_html: { class: 'form-control' }, label: t('.other_location')
  .row
    .col-xs-12.col-md-4
      = f.association :interventions, collection: @interventions, multiple: true, label_method: :action, value_method: :id, label: t('.interventions')
    .col-xs-12.col-md-4
      = f.association :material, collection: @materials.map{ |m| [m.status, m.id] }, input_html: { class: 'form-control' }, label: t('.material')
    .col-xs-12.col-md-4
      - ads = @assessment_domains.present? ? @assessment_domains.map{ |ad| [ad.goal, ad.id] } : []
      = f.association :assessment_domains, collection: ads, multiple: true, label: t('.goals_addressed')
  .row
    .col-xs-12.col-md-4
      = f.text_area :response, label: t('.response'), class: 'tinymce', input_html: { rows: 10 }
    .col-xs-12.col-md-4
      = f.text_area :additional_note, label: t('.additional_notes'), class: 'tinymce', input_html: { rows: 10 }
  .hidden
    .form-actions
      = f.submit t('save'), class: 'btn btn-primary form-btn'
.warning
  %p
    %i= t('.allowed_file')
    %br
    %i= t('.max_file_size')
.loader.hide
.ibox-footer.dummy-footer
  %button.btn.btn-success.form-btn#only-submit
    = t('save')
  = link_to t('cancel'), client_progress_notes_path(@client), class: 'btn btn-default form-btn'
