= simple_form_for([@assessment.client, @assessment], html: { class: 'assessment-form' }) do |f|
  = hidden_field_tag :current_user, current_user.roles
  .row.assessment-domains
    .col-xs-12
      #rootwizard{ data: { next: t('.next'), previous: t('.previous'), finish: t('.finish'), save: t('.save'), action: params['action'] } }
        = f.simple_fields_for 'assessment_domains', order_assessment do |ad|
          - domain = ad.object.domain
          %h4= domain.name
          %div{ class: "assessment-domain-item domain-#{domain.id}" }
            .ibox
              .ibox-title
                %h5= "#{@assessment.client.name}"
                %label.label.label-success= "#{t('.domain')} #{domain.name}"
                .ibox-tools
                  = link_to client_assessments_path(@client) do
                    .btn.btn-default.btn-back-default.button
                      = t('.back')
              .ibox-content
                = ad.hidden_field :domain_id
                .well
                  = ad.object.domain.description.html_safe
                .score_option{ data: { 'score-1': domain.score_1_color, 'score-2': domain.score_2_color, 'score-3': domain.score_3_color, 'score-4': domain.score_4_color, 'domain-id': domain.id } }
                  = ad.collection_radio_buttons :score, [%w(1 1), %w(2 2), %w(3 3), %w(4 4)], :first, :last
                = ad.input :goal, label: false, required: ad.object.goal_required?, input_html: { class: 'goal', id: "goal-text-area-#{domain.name}" }
                .row
                  .col-sm-12.col-md-6
                    = render 'attachment_fields', ad: ad
                  .col-sm-12.col-md-6
                    .form-group
                      %p.text-danger.task_required
                        %abbr{ title: 'required' } *
                        = t('.at_least_one_task_required')
                      %div{ class: "task-arising" }
                        %label.control-label
                          = t('.tasks_arising')
                          .task-required-option{ id: "i-checks-tasks-#{domain.name}" }
                            %label Would you prefer adding tasks at the end?
                            = ad.input :requried_task_last, as: :radio_buttons, collection: [['Yes', true],['No', false]], label: false
                        %ol.tasks-list{ type: '1'}
                          - @client.tasks.by_domain_id(domain).incomplete.each do |task|
                            %li.list-group-item{style: 'padding-bottom: 11px'}
                              = task.name
                              - if can? :destroy, Task
                                %a.pull-right.remove-task.fa.fa-trash.btn.btn-outline.btn-danger.btn-xs{'data-url' => "/clients/#{@client.id}/tasks/#{task.id}", 'data-persisted' => 'true', :style => "margin: 0;"}
                    .form-group
                      %button.assessment-task-btn.btn.btn-primary.pull-right{class: "#{policy(@client).create? ? '' : 'disabled'}", type: 'button', 'data-target' => "#tasksFromModal", 'data-toggle' => 'modal', 'data-domain-id': "#{domain.id}"}
                        = t('.add_task')
- if policy(@client).create?
  = render 'add_task_form'
