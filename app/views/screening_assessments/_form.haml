= simple_form_for [@client, @screening_assessment], html: { id: 'screening-assessment' }  do |f|
  = f.hidden_field :client_id
  = f.hidden_field :screening_type, value: params[:screening_type] || @screening_assessment.screening_type
  .row
    .col-md-6
      - date_label = @screening_assessment.one_off? ? t('.screening_assessment_date') : t('.assessment_date')
      = f.label :screening_assessment_date do
        = date_label
      %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.cb_dmat.screening_assessment_date')}", placement: "auto" } }
        = fa_icon "info-circle", class: 'text-info m-xs'
      = f.input :screening_assessment_date, label: false, as: :string, input_html: { value: f.object.screening_assessment_date&.to_date&.to_s, class: 'date optional form-control date-picker' }

    .col-md-6
      .form-group.string.optional.screening_assessment_client_age
        .col-sm-3
          = f.label :client_age, t('.client_age')
          %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.cb_dmat.client_age')}", placement: "auto" } }
            = fa_icon "info-circle", class: 'text-info m-xs'

        .col-sm-9
          = date_of_birth_in_words(@client.date_of_birth, I18n.locale)

      = f.input :client_age, label: false, wrapper: :horizontal_form, input_html: { value: date_of_birth_in_words(@client.date_of_birth), class: 'hidden' }
  .row
    .col-md-6
      = f.label :visitor, t('.visitor')
      %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.cb_dmat.visitor')}", placement: "auto" } }
        = fa_icon "info-circle", class: 'text-info m-xs'
      = f.input :visitor, label: false

    .col-md-6
      = f.label :client_milestone_age, t('.client_milestone_age')
      %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.cb_dmat.client_milestone_age')}", placement: "auto" } }
        = fa_icon "info-circle", class: 'text-info m-xs'

      = f.input :client_milestone_age, label: false, collection: DevelopmentalMarker.map_milestone_age_name

  .row
    .col-md-12
      = f.label :note, t('.note')
      %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "hover", content: "#{I18n.t('inline_help.cb_dmat.note')}", placement: "auto" } }
        = fa_icon "info-circle", class: 'text-info m-xs'
      = f.input :note, label: false
  %hr/
  - if @previous_screening_assessment
    = render 'previous_screening_assessment', screening_assessment: @previous_screening_assessment

  - [*@developmental_marker_screening_assessments, *@screening_assessment.developmental_marker_screening_assessments].uniq{|dmsa| dmsa.developmental_marker_id }.each do |developmental_marker_screening_assessment|
    = f.simple_fields_for 'developmental_marker_screening_assessments', developmental_marker_screening_assessment do |ff|
      = ff.hidden_field :screening_assessment_id
      = ff.hidden_field :developmental_marker_id
      - developmental_marker = ff.object.developmental_marker
      - is_marker_not_selected = developmental_marker.name != f.object.client_milestone_age
      %fieldset.fieldset-yborder{ class: is_marker_not_selected && 'hidden', data: { developmental_marker_screening_assessment_name: developmental_marker.name }  }
        = ff.hidden_field :_destroy, value: is_marker_not_selected
        %legend.legend-border
          %h4
            %span.text-success
              = field_to_local(developmental_marker, 'short_description')
            - inline_help = t("inline_help.cb_dmat.by_age_#{developmental_marker.name.downcase.gsub(" ", "_").gsub(".", "_") }").html_safe
            - if inline_help.to_s.exclude?('missing:')
              %a{:role => "button", :tabIndex => "0",  data: { toggle: "popover", trigger: "hover", content: inline_help, placement: "right" } }
                = fa_icon "info-circle", class: 'text-info m-xs'

        .row
          .col-xs-12.col-sm-12.col-md-3
            = image_tag ("cb_dmat/#{developmental_marker.name.parameterize}.png" || 'picture.png'), class: 'img-responsive'
          .col-xs-12.col-sm-12.col-md-9
            .row
              .col-xs-8
                = ff.label :question_1, field_to_local(developmental_marker, 'question_1')
              .col-xs-4
                = ff.collection_radio_buttons :question_1, [[human_boolean(true), true], [human_boolean(false), false]], :last, :first, wrapper_html: { class: 'row' }, item_wrapper_class: 'col-xs-6 col-md-4', label: false, disabled: is_marker_not_selected
            %hr/
            .row
              .col-xs-8
                = ff.label :question_2, field_to_local(developmental_marker, 'question_2')
              .col-xs-4
                = ff.collection_radio_buttons :question_2, [[human_boolean(true), true], [human_boolean(false), false]], :last, :first, wrapper_html: { class: 'row' }, item_wrapper_class: 'col-xs-6 col-md-4', label: false, disabled: is_marker_not_selected
            %hr/
            .row
              .col-xs-8
                = ff.label :question_3, field_to_local(developmental_marker, 'question_3')
              .col-xs-4
                = ff.collection_radio_buttons :question_3, [[human_boolean(true), true], [human_boolean(false), false]], :last, :first, wrapper_html: { class: 'row' }, item_wrapper_class: 'col-xs-6 col-md-4', label: false, disabled: is_marker_not_selected
            %hr/
            .row
              .col-xs-8
                = ff.label :question_4, field_to_local(developmental_marker, 'question_4')
              .col-xs-4
                = ff.collection_radio_buttons :question_4, [[human_boolean(true), true], [human_boolean(false), false]], :last, :first, wrapper_html: { class: 'row' }, item_wrapper_class: 'col-xs-6 col-md-4', label: false, disabled: is_marker_not_selected
  .row
    .col-xs-12.col-md-12.col-lg-6
    .col-xs-12.col-md-12.col-lg-6
      #tasks.hide
        = f.simple_fields_for :tasks do |task|
          = render 'task_fields', f: task
        .links
          = link_to_add_association t('.add_task'), f, :tasks, class: 'btn-add-task btn btn-outline btn-success pull-right'

  = f.input :attachments, label: t('.attachments'), as: :file, input_html: { multiple: true }

  .row
    .col-xs-12
      = f.submit t('save'), class: 'btn btn-primary btn-form', id: 'case-note-submit-btn', data: { disable_with: t('saving') }
      = link_to t('back') , client_screening_assessments_path(@client), class: 'btn btn-default btn-form'
