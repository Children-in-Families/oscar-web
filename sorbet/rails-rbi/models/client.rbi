# This is an autogenerated file for dynamic methods in Client
# Please rerun rake rails_rbi:models to regenerate.
# typed: strong

class Client::ActiveRecord_Relation < ActiveRecord::Relation
  include Client::ModelRelationShared
  extend T::Generic
  Elem = type_member(fixed: Client)
end

class Client::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  include Client::ModelRelationShared
  extend T::Generic
  Elem = type_member(fixed: Client)
end

class Client < ActiveRecord::Base
  extend T::Sig
  extend T::Generic
  extend Client::ModelRelationShared
  include Client::InstanceMethods
  Elem = type_template(fixed: Client)
end

module Client::InstanceMethods
  extend T::Sig

  sig { returns(T.nilable(T::Boolean)) }
  def able(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def able=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def able?(*args); end

  sig { returns(T.nilable(String)) }
  def able_state(); end

  sig { params(value: T.nilable(String)).void }
  def able_state=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def able_state?(*args); end

  sig { returns(T.nilable(Date)) }
  def accepted_date(); end

  sig { params(value: T.nilable(Date)).void }
  def accepted_date=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def accepted_date?(*args); end

  sig { returns(T.nilable(String)) }
  def address_type(); end

  sig { params(value: T.nilable(String)).void }
  def address_type=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def address_type?(*args); end

  sig { returns(T.nilable(String)) }
  def archive_district(); end

  sig { params(value: T.nilable(String)).void }
  def archive_district=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def archive_district?(*args); end

  sig { returns(T.nilable(String)) }
  def archive_state(); end

  sig { params(value: T.nilable(String)).void }
  def archive_state=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def archive_state?(*args); end

  sig { returns(T.nilable(String)) }
  def archived_slug(); end

  sig { params(value: T.nilable(String)).void }
  def archived_slug=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def archived_slug?(*args); end

  sig { returns(Integer) }
  def assessments_count(); end

  sig { params(value: Integer).void }
  def assessments_count=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def assessments_count?(*args); end

  sig { returns(T.nilable(String)) }
  def background(); end

  sig { params(value: T.nilable(String)).void }
  def background=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def background?(*args); end

  sig { returns(T::Boolean) }
  def birth_cert(); end

  sig { params(value: T::Boolean).void }
  def birth_cert=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def birth_cert?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def birth_cert_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def birth_cert_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def birth_cert_files?(*args); end

  sig { returns(T.nilable(Integer)) }
  def birth_province_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def birth_province_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def birth_province_id?(*args); end

  sig { returns(T.nilable(String)) }
  def brsc_branch(); end

  sig { params(value: T.nilable(String)).void }
  def brsc_branch=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def brsc_branch?(*args); end

  sig { returns(T.nilable(Integer)) }
  def carer_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def carer_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def carer_id?(*args); end

  sig { returns(T.nilable(String)) }
  def ccwc_name(); end

  sig { params(value: T.nilable(String)).void }
  def ccwc_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def ccwc_name?(*args); end

  sig { returns(T.nilable(String)) }
  def ccwc_phone(); end

  sig { params(value: T.nilable(String)).void }
  def ccwc_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def ccwc_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def chief_commune_name(); end

  sig { params(value: T.nilable(String)).void }
  def chief_commune_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def chief_commune_name?(*args); end

  sig { returns(T.nilable(String)) }
  def chief_commune_phone(); end

  sig { params(value: T.nilable(String)).void }
  def chief_commune_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def chief_commune_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def chief_village_name(); end

  sig { params(value: T.nilable(String)).void }
  def chief_village_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def chief_village_name?(*args); end

  sig { returns(T.nilable(String)) }
  def chief_village_phone(); end

  sig { params(value: T.nilable(String)).void }
  def chief_village_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def chief_village_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def city2(); end

  sig { params(value: T.nilable(String)).void }
  def city2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def city2?(*args); end

  sig { returns(T.nilable(String)) }
  def client_email(); end

  sig { params(value: T.nilable(String)).void }
  def client_email=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def client_email?(*args); end

  sig { returns(T.nilable(String)) }
  def client_phone(); end

  sig { params(value: T.nilable(String)).void }
  def client_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def client_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def code(); end

  sig { params(value: T.nilable(String)).void }
  def code=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def code?(*args); end

  sig { returns(T.nilable(Integer)) }
  def commune_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def commune_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def commune_id?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def completed(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def completed=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def completed?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_address(); end

  sig { params(value: T.nilable(String)).void }
  def concern_address=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_address?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_address_type(); end

  sig { params(value: T.nilable(String)).void }
  def concern_address_type=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_address_type?(*args); end

  sig { returns(T.nilable(Integer)) }
  def concern_commune_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def concern_commune_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_commune_id?(*args); end

  sig { returns(T.nilable(Integer)) }
  def concern_district_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def concern_district_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_district_id?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_email(); end

  sig { params(value: T.nilable(String)).void }
  def concern_email=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_email?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_email_owner(); end

  sig { params(value: T.nilable(String)).void }
  def concern_email_owner=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_email_owner?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_house(); end

  sig { params(value: T.nilable(String)).void }
  def concern_house=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_house?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def concern_is_outside(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def concern_is_outside=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_is_outside?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_location(); end

  sig { params(value: T.nilable(String)).void }
  def concern_location=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_location?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_outside_address(); end

  sig { params(value: T.nilable(String)).void }
  def concern_outside_address=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_outside_address?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_phone(); end

  sig { params(value: T.nilable(String)).void }
  def concern_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_phone_owner(); end

  sig { params(value: T.nilable(String)).void }
  def concern_phone_owner=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_phone_owner?(*args); end

  sig { returns(T.nilable(Integer)) }
  def concern_province_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def concern_province_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_province_id?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def concern_same_as_client(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def concern_same_as_client=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_same_as_client?(*args); end

  sig { returns(T.nilable(String)) }
  def concern_street(); end

  sig { params(value: T.nilable(String)).void }
  def concern_street=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_street?(*args); end

  sig { returns(T.nilable(Integer)) }
  def concern_village_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def concern_village_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def concern_village_id?(*args); end

  sig { returns(T.nilable(String)) }
  def country_origin(); end

  sig { params(value: T.nilable(String)).void }
  def country_origin=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def country_origin?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def created_at(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def created_at=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def created_at?(*args); end

  sig { returns(T.nilable(String)) }
  def current_address(); end

  sig { params(value: T.nilable(String)).void }
  def current_address=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_address?(*args); end

  sig { returns(T.nilable(String)) }
  def current_city(); end

  sig { params(value: T.nilable(String)).void }
  def current_city=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_city?(*args); end

  sig { returns(T.nilable(Integer)) }
  def current_family_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def current_family_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_family_id?(*args); end

  sig { returns(T.nilable(String)) }
  def current_household_type(); end

  sig { params(value: T.nilable(String)).void }
  def current_household_type=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_household_type?(*args); end

  sig { returns(T.nilable(String)) }
  def current_island(); end

  sig { params(value: T.nilable(String)).void }
  def current_island=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_island?(*args); end

  sig { returns(T.nilable(String)) }
  def current_po_box(); end

  sig { params(value: T.nilable(String)).void }
  def current_po_box=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_po_box?(*args); end

  sig { returns(T.nilable(String)) }
  def current_resident_own_or_rent(); end

  sig { params(value: T.nilable(String)).void }
  def current_resident_own_or_rent=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_resident_own_or_rent?(*args); end

  sig { returns(T.nilable(String)) }
  def current_settlement(); end

  sig { params(value: T.nilable(String)).void }
  def current_settlement=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_settlement?(*args); end

  sig { returns(T.nilable(String)) }
  def current_street(); end

  sig { params(value: T.nilable(String)).void }
  def current_street=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def current_street?(*args); end

  sig { returns(T.nilable(Date)) }
  def date_of_birth(); end

  sig { params(value: T.nilable(Date)).void }
  def date_of_birth=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def date_of_birth?(*args); end

  sig { returns(T.nilable(String)) }
  def department(); end

  sig { params(value: T.nilable(String)).void }
  def department=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def department?(*args); end

  sig { returns(T.nilable(String)) }
  def description_house_landmark(); end

  sig { params(value: T.nilable(String)).void }
  def description_house_landmark=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def description_house_landmark?(*args); end

  sig { returns(T.nilable(String)) }
  def directions(); end

  sig { params(value: T.nilable(String)).void }
  def directions=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def directions?(*args); end

  sig { returns(T.nilable(Integer)) }
  def district_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def district_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def district_id?(*args); end

  sig { returns(T.nilable(Integer)) }
  def donor_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def donor_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def donor_id?(*args); end

  sig { returns(T.nilable(String)) }
  def dosavy_name(); end

  sig { params(value: T.nilable(String)).void }
  def dosavy_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def dosavy_name?(*args); end

  sig { returns(T.nilable(String)) }
  def dosavy_phone(); end

  sig { params(value: T.nilable(String)).void }
  def dosavy_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def dosavy_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def education_background(); end

  sig { params(value: T.nilable(String)).void }
  def education_background=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def education_background?(*args); end

  sig { returns(T.nilable(String)) }
  def ethnicity(); end

  sig { params(value: T.nilable(String)).void }
  def ethnicity=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def ethnicity?(*args); end

  sig { returns(T.nilable(String)) }
  def exit_circumstance(); end

  sig { params(value: T.nilable(String)).void }
  def exit_circumstance=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def exit_circumstance?(*args); end

  sig { returns(T.nilable(Date)) }
  def exit_date(); end

  sig { params(value: T.nilable(Date)).void }
  def exit_date=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def exit_date?(*args); end

  sig { returns(T.nilable(String)) }
  def exit_note(); end

  sig { params(value: T.nilable(String)).void }
  def exit_note=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def exit_note?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def exit_reasons(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def exit_reasons=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def exit_reasons?(*args); end

  sig { returns(T.nilable(String)) }
  def external_case_worker_id(); end

  sig { params(value: T.nilable(String)).void }
  def external_case_worker_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def external_case_worker_id?(*args); end

  sig { returns(T.nilable(String)) }
  def external_case_worker_name(); end

  sig { params(value: T.nilable(String)).void }
  def external_case_worker_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def external_case_worker_name?(*args); end

  sig { returns(T.nilable(String)) }
  def external_id(); end

  sig { params(value: T.nilable(String)).void }
  def external_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def external_id?(*args); end

  sig { returns(T.nilable(String)) }
  def external_id_display(); end

  sig { params(value: T.nilable(String)).void }
  def external_id_display=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def external_id_display?(*args); end

  sig { returns(T::Boolean) }
  def family_book(); end

  sig { params(value: T::Boolean).void }
  def family_book=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def family_book?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def family_book_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def family_book_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def family_book_files?(*args); end

  sig { returns(T.nilable(String)) }
  def family_name(); end

  sig { params(value: T.nilable(String)).void }
  def family_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def family_name?(*args); end

  sig { returns(T.nilable(Date)) }
  def follow_up_date(); end

  sig { params(value: T.nilable(Date)).void }
  def follow_up_date=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def follow_up_date?(*args); end

  sig { returns(T.nilable(Integer)) }
  def followed_up_by_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def followed_up_by_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def followed_up_by_id?(*args); end

  sig { returns(T.nilable(String)) }
  def gender(); end

  sig { params(value: T.nilable(String)).void }
  def gender=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gender?(*args); end

  sig { returns(T.nilable(String)) }
  def given_name(); end

  sig { params(value: T.nilable(String)).void }
  def given_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def given_name?(*args); end

  sig { returns(T.nilable(String)) }
  def global_id(); end

  sig { params(value: T.nilable(String)).void }
  def global_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def global_id?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_city(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_city=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_city?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_commune(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_commune=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_commune?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_district(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_district=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_district?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_home(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_home=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_home?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_name(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_name?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_phone(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_relationship(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_relationship=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_relationship?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_street(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_street=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_street?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_carer_village(); end

  sig { params(value: T.nilable(String)).void }
  def gov_carer_village=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_carer_village?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_caseworker_comment(); end

  sig { params(value: T.nilable(String)).void }
  def gov_caseworker_comment=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_caseworker_comment?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_caseworker_name(); end

  sig { params(value: T.nilable(String)).void }
  def gov_caseworker_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_caseworker_name?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_caseworker_phone(); end

  sig { params(value: T.nilable(String)).void }
  def gov_caseworker_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_caseworker_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_city(); end

  sig { params(value: T.nilable(String)).void }
  def gov_city=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_city?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_client_code(); end

  sig { params(value: T.nilable(String)).void }
  def gov_client_code=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_client_code?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_commune(); end

  sig { params(value: T.nilable(String)).void }
  def gov_commune=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_commune?(*args); end

  sig { returns(T.nilable(Date)) }
  def gov_date(); end

  sig { params(value: T.nilable(Date)).void }
  def gov_date=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_date?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_district(); end

  sig { params(value: T.nilable(String)).void }
  def gov_district=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_district?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_guardian_comment(); end

  sig { params(value: T.nilable(String)).void }
  def gov_guardian_comment=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_guardian_comment?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_information_source(); end

  sig { params(value: T.nilable(String)).void }
  def gov_information_source=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_information_source?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_interview_city(); end

  sig { params(value: T.nilable(String)).void }
  def gov_interview_city=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_interview_city?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_interview_commune(); end

  sig { params(value: T.nilable(String)).void }
  def gov_interview_commune=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_interview_commune?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_interview_district(); end

  sig { params(value: T.nilable(String)).void }
  def gov_interview_district=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_interview_district?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_interview_village(); end

  sig { params(value: T.nilable(String)).void }
  def gov_interview_village=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_interview_village?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_referral_reason(); end

  sig { params(value: T.nilable(String)).void }
  def gov_referral_reason=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_referral_reason?(*args); end

  sig { returns(T.nilable(String)) }
  def gov_village_code(); end

  sig { params(value: T.nilable(String)).void }
  def gov_village_code=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def gov_village_code?(*args); end

  sig { returns(T.nilable(Integer)) }
  def grade(); end

  sig { params(value: T.nilable(Integer)).void }
  def grade=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def grade?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def has_been_in_government_care(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def has_been_in_government_care=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def has_been_in_government_care?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def has_been_in_orphanage(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def has_been_in_orphanage=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def has_been_in_orphanage?(*args); end

  sig { returns(T.nilable(String)) }
  def house_number(); end

  sig { params(value: T.nilable(String)).void }
  def house_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def house_number?(*args); end

  sig { returns(T.nilable(String)) }
  def household_type2(); end

  sig { params(value: T.nilable(String)).void }
  def household_type2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def household_type2?(*args); end

  sig { returns(Integer) }
  def id(); end

  sig { params(value: Integer).void }
  def id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def id?(*args); end

  sig { returns(T.nilable(String)) }
  def id_number(); end

  sig { params(value: T.nilable(String)).void }
  def id_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def id_number?(*args); end

  sig { returns(T.nilable(Integer)) }
  def id_poor(); end

  sig { params(value: T.nilable(Integer)).void }
  def id_poor=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def id_poor?(*args); end

  sig { returns(T.nilable(Date)) }
  def initial_referral_date(); end

  sig { params(value: T.nilable(Date)).void }
  def initial_referral_date=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def initial_referral_date?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def is_receiving_additional_benefits(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def is_receiving_additional_benefits=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def is_receiving_additional_benefits?(*args); end

  sig { returns(T.nilable(String)) }
  def island2(); end

  sig { params(value: T.nilable(String)).void }
  def island2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def island2?(*args); end

  sig { returns(T.nilable(String)) }
  def kid_id(); end

  sig { params(value: T.nilable(String)).void }
  def kid_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def kid_id?(*args); end

  sig { returns(T.nilable(String)) }
  def legacy_brcs_id(); end

  sig { params(value: T.nilable(String)).void }
  def legacy_brcs_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def legacy_brcs_id?(*args); end

  sig { returns(T.nilable(String)) }
  def legal_representative_name(); end

  sig { params(value: T.nilable(String)).void }
  def legal_representative_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def legal_representative_name?(*args); end

  sig { returns(T.nilable(String)) }
  def legal_team_name(); end

  sig { params(value: T.nilable(String)).void }
  def legal_team_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def legal_team_name?(*args); end

  sig { returns(T.nilable(String)) }
  def legal_team_phone(); end

  sig { params(value: T.nilable(String)).void }
  def legal_team_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def legal_team_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def live_with(); end

  sig { params(value: T.nilable(String)).void }
  def live_with=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def live_with?(*args); end

  sig { returns(T::Boolean) }
  def local_consent(); end

  sig { params(value: T::Boolean).void }
  def local_consent=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def local_consent?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def local_consent_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def local_consent_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def local_consent_files?(*args); end

  sig { returns(T.nilable(String)) }
  def local_family_name(); end

  sig { params(value: T.nilable(String)).void }
  def local_family_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def local_family_name?(*args); end

  sig { returns(T.nilable(String)) }
  def local_given_name(); end

  sig { params(value: T.nilable(String)).void }
  def local_given_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def local_given_name?(*args); end

  sig { returns(T.nilable(String)) }
  def locality(); end

  sig { params(value: T.nilable(String)).void }
  def locality=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def locality?(*args); end

  sig { returns(T.nilable(String)) }
  def location_description(); end

  sig { params(value: T.nilable(String)).void }
  def location_description=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def location_description?(*args); end

  sig { returns(T.nilable(String)) }
  def location_of_concern(); end

  sig { params(value: T.nilable(String)).void }
  def location_of_concern=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def location_of_concern?(*args); end

  sig { returns(T.nilable(String)) }
  def main_school_contact(); end

  sig { params(value: T.nilable(String)).void }
  def main_school_contact=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def main_school_contact?(*args); end

  sig { returns(T.nilable(String)) }
  def marital_status(); end

  sig { params(value: T.nilable(String)).void }
  def marital_status=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def marital_status?(*args); end

  sig { returns(T.nilable(String)) }
  def mosvy_number(); end

  sig { params(value: T.nilable(String)).void }
  def mosvy_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def mosvy_number?(*args); end

  sig { returns(T.nilable(String)) }
  def name_of_referee(); end

  sig { params(value: T.nilable(String)).void }
  def name_of_referee=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def name_of_referee?(*args); end

  sig { returns(T::Boolean) }
  def national_id(); end

  sig { params(value: T::Boolean).void }
  def national_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def national_id?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def national_id_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def national_id_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def national_id_files?(*args); end

  sig { returns(T.nilable(String)) }
  def national_id_number(); end

  sig { params(value: T.nilable(String)).void }
  def national_id_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def national_id_number?(*args); end

  sig { returns(T.nilable(String)) }
  def nationality(); end

  sig { params(value: T.nilable(String)).void }
  def nationality=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def nationality?(*args); end

  sig { returns(T.nilable(String)) }
  def neighbor_name(); end

  sig { params(value: T.nilable(String)).void }
  def neighbor_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def neighbor_name?(*args); end

  sig { returns(T.nilable(String)) }
  def neighbor_phone(); end

  sig { params(value: T.nilable(String)).void }
  def neighbor_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def neighbor_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def nickname(); end

  sig { params(value: T.nilable(String)).void }
  def nickname=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def nickname?(*args); end

  sig { returns(T.nilable(String)) }
  def old_commune(); end

  sig { params(value: T.nilable(String)).void }
  def old_commune=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def old_commune?(*args); end

  sig { returns(T.nilable(String)) }
  def old_village(); end

  sig { params(value: T.nilable(String)).void }
  def old_village=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def old_village?(*args); end

  sig { returns(T.nilable(String)) }
  def other_agency_name(); end

  sig { params(value: T.nilable(String)).void }
  def other_agency_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_agency_name?(*args); end

  sig { returns(T.nilable(String)) }
  def other_agency_phone(); end

  sig { params(value: T.nilable(String)).void }
  def other_agency_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_agency_phone?(*args); end

  sig { returns(T.nilable(String)) }
  def other_info_of_exit(); end

  sig { params(value: T.nilable(String)).void }
  def other_info_of_exit=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_info_of_exit?(*args); end

  sig { returns(T::Boolean) }
  def other_legal_doc(); end

  sig { params(value: T::Boolean).void }
  def other_legal_doc=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_legal_doc?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def other_legal_doc_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def other_legal_doc_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_legal_doc_files?(*args); end

  sig { returns(T.nilable(String)) }
  def other_phone_number(); end

  sig { params(value: T.nilable(String)).void }
  def other_phone_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_phone_number?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def other_phone_whatsapp(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def other_phone_whatsapp=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_phone_whatsapp?(*args); end

  sig { returns(T.nilable(String)) }
  def other_representative_name(); end

  sig { params(value: T.nilable(String)).void }
  def other_representative_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def other_representative_name?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def outside(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def outside=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def outside?(*args); end

  sig { returns(T.nilable(String)) }
  def outside_address(); end

  sig { params(value: T.nilable(String)).void }
  def outside_address=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def outside_address?(*args); end

  sig { returns(T::Boolean) }
  def passport(); end

  sig { params(value: T::Boolean).void }
  def passport=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def passport?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def passport_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def passport_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def passport_files?(*args); end

  sig { returns(T.nilable(String)) }
  def passport_number(); end

  sig { params(value: T.nilable(String)).void }
  def passport_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def passport_number?(*args); end

  sig { returns(T.nilable(String)) }
  def phone_counselling_summary(); end

  sig { params(value: T.nilable(String)).void }
  def phone_counselling_summary=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def phone_counselling_summary?(*args); end

  sig { returns(T.nilable(String)) }
  def phone_owner(); end

  sig { params(value: T.nilable(String)).void }
  def phone_owner=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def phone_owner?(*args); end

  sig { returns(T.nilable(String)) }
  def plot(); end

  sig { params(value: T.nilable(String)).void }
  def plot=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def plot?(*args); end

  sig { returns(T.nilable(String)) }
  def po_box2(); end

  sig { params(value: T.nilable(String)).void }
  def po_box2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def po_box2?(*args); end

  sig { returns(T::Boolean) }
  def police_interview(); end

  sig { params(value: T::Boolean).void }
  def police_interview=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def police_interview?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def police_interview_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def police_interview_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def police_interview_files?(*args); end

  sig { returns(T.nilable(String)) }
  def postal_code(); end

  sig { params(value: T.nilable(String)).void }
  def postal_code=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def postal_code?(*args); end

  sig { returns(T.nilable(String)) }
  def preferred_language(); end

  sig { params(value: T.nilable(String)).void }
  def preferred_language=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def preferred_language?(*args); end

  sig { returns(T.nilable(String)) }
  def presented_id(); end

  sig { params(value: T.nilable(String)).void }
  def presented_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def presented_id?(*args); end

  sig { returns(T.nilable(String)) }
  def profile(); end

  sig { params(value: T.nilable(String)).void }
  def profile=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def profile?(*args); end

  sig { returns(T.nilable(Integer)) }
  def province_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def province_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def province_id?(*args); end

  sig { returns(T.nilable(String)) }
  def rated_for_id_poor(); end

  sig { params(value: T.nilable(String)).void }
  def rated_for_id_poor=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def rated_for_id_poor?(*args); end

  sig { returns(T.nilable(String)) }
  def reason_for_referral(); end

  sig { params(value: T.nilable(String)).void }
  def reason_for_referral=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def reason_for_referral?(*args); end

  sig { returns(T.nilable(Integer)) }
  def received_by_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def received_by_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def received_by_id?(*args); end

  sig { returns(T.nilable(Integer)) }
  def referee_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def referee_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referee_id?(*args); end

  sig { returns(T.nilable(String)) }
  def referee_relationship(); end

  sig { params(value: T.nilable(String)).void }
  def referee_relationship=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referee_relationship?(*args); end

  sig { returns(T::Boolean) }
  def referral_doc(); end

  sig { params(value: T::Boolean).void }
  def referral_doc=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referral_doc?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def referral_doc_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def referral_doc_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referral_doc_files?(*args); end

  sig { returns(T.nilable(String)) }
  def referral_phone(); end

  sig { params(value: T.nilable(String)).void }
  def referral_phone=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referral_phone?(*args); end

  sig { returns(T.nilable(Integer)) }
  def referral_source_category_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def referral_source_category_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referral_source_category_id?(*args); end

  sig { returns(T.nilable(Integer)) }
  def referral_source_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def referral_source_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referral_source_id?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def referred_external(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def referred_external=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def referred_external?(*args); end

  sig { returns(T.nilable(String)) }
  def rejected_note(); end

  sig { params(value: T.nilable(String)).void }
  def rejected_note=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def rejected_note?(*args); end

  sig { returns(T.nilable(String)) }
  def relation_to_referee(); end

  sig { params(value: T.nilable(String)).void }
  def relation_to_referee=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def relation_to_referee?(*args); end

  sig { returns(T.nilable(String)) }
  def relevant_referral_information(); end

  sig { params(value: T.nilable(String)).void }
  def relevant_referral_information=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def relevant_referral_information?(*args); end

  sig { returns(T.nilable(String)) }
  def resident_own_or_rent2(); end

  sig { params(value: T.nilable(String)).void }
  def resident_own_or_rent2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def resident_own_or_rent2?(*args); end

  sig { returns(T.nilable(Integer)) }
  def rice_support(); end

  sig { params(value: T.nilable(Integer)).void }
  def rice_support=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def rice_support?(*args); end

  sig { returns(T.nilable(String)) }
  def road(); end

  sig { params(value: T.nilable(String)).void }
  def road=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def road?(*args); end

  sig { returns(T.nilable(String)) }
  def school_grade(); end

  sig { params(value: T.nilable(String)).void }
  def school_grade=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def school_grade?(*args); end

  sig { returns(T.nilable(String)) }
  def school_name(); end

  sig { params(value: T.nilable(String)).void }
  def school_name=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def school_name?(*args); end

  sig { returns(T.nilable(String)) }
  def settlement2(); end

  sig { params(value: T.nilable(String)).void }
  def settlement2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def settlement2?(*args); end

  sig { returns(T.nilable(String)) }
  def slug(); end

  sig { params(value: T.nilable(String)).void }
  def slug=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def slug?(*args); end

  sig { returns(T.nilable(Integer)) }
  def state_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def state_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def state_id?(*args); end

  sig { returns(T.nilable(String)) }
  def status(); end

  sig { params(value: T.nilable(String)).void }
  def status=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def status?(*args); end

  sig { returns(T.nilable(String)) }
  def street2(); end

  sig { params(value: T.nilable(String)).void }
  def street2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def street2?(*args); end

  sig { returns(T.nilable(String)) }
  def street_line1(); end

  sig { params(value: T.nilable(String)).void }
  def street_line1=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def street_line1?(*args); end

  sig { returns(T.nilable(String)) }
  def street_line2(); end

  sig { params(value: T.nilable(String)).void }
  def street_line2=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def street_line2?(*args); end

  sig { returns(T.nilable(String)) }
  def street_number(); end

  sig { params(value: T.nilable(String)).void }
  def street_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def street_number?(*args); end

  sig { returns(T.nilable(Integer)) }
  def subdistrict_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def subdistrict_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def subdistrict_id?(*args); end

  sig { returns(T.nilable(String)) }
  def suburb(); end

  sig { params(value: T.nilable(String)).void }
  def suburb=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def suburb?(*args); end

  sig { returns(T.nilable(String)) }
  def telephone_number(); end

  sig { params(value: T.nilable(String)).void }
  def telephone_number=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def telephone_number?(*args); end

  sig { returns(T.nilable(Integer)) }
  def township_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def township_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def township_id?(*args); end

  sig { returns(T::Boolean) }
  def travel_doc(); end

  sig { params(value: T::Boolean).void }
  def travel_doc=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def travel_doc?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def travel_doc_files(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def travel_doc_files=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def travel_doc_files?(*args); end

  sig { returns(T.nilable(String)) }
  def type_of_trafficking(); end

  sig { params(value: T.nilable(String)).void }
  def type_of_trafficking=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def type_of_trafficking?(*args); end

  sig { returns(T.nilable(T.untyped)) }
  def updated_at(); end

  sig { params(value: T.nilable(T.untyped)).void }
  def updated_at=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def updated_at?(*args); end

  sig { returns(T.nilable(Integer)) }
  def user_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def user_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def user_id?(*args); end

  sig { returns(T.nilable(Integer)) }
  def village_id(); end

  sig { params(value: T.nilable(Integer)).void }
  def village_id=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def village_id?(*args); end

  sig { returns(T.nilable(String)) }
  def what3words(); end

  sig { params(value: T.nilable(String)).void }
  def what3words=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def what3words?(*args); end

  sig { returns(T.nilable(T::Boolean)) }
  def whatsapp(); end

  sig { params(value: T.nilable(T::Boolean)).void }
  def whatsapp=(value); end

  sig { params(args: T.untyped).returns(T::Boolean) }
  def whatsapp?(*args); end

end

class Client
  extend T::Sig

  sig { returns(::Agency::ActiveRecord_Associations_CollectionProxy) }
  def agencies(); end

  sig { params(value: T.any(T::Array[::Agency], ::Agency::ActiveRecord_Associations_CollectionProxy)).void }
  def agencies=(value); end

  sig { returns(::AgencyClient::ActiveRecord_Associations_CollectionProxy) }
  def agency_clients(); end

  sig { params(value: T.any(T::Array[::AgencyClient], ::AgencyClient::ActiveRecord_Associations_CollectionProxy)).void }
  def agency_clients=(value); end

  sig { returns(::Assessment::ActiveRecord_Associations_CollectionProxy) }
  def assessments(); end

  sig { params(value: T.any(T::Array[::Assessment], ::Assessment::ActiveRecord_Associations_CollectionProxy)).void }
  def assessments=(value); end

  sig { returns(T.nilable(::Province)) }
  def birth_province(); end

  sig { params(value: T.nilable(::Province)).void }
  def birth_province=(value); end

  sig { returns(T.nilable(::Call)) }
  def call(); end

  sig { params(value: T.nilable(::Call)).void }
  def call=(value); end

  sig { returns(::Call::ActiveRecord_Associations_CollectionProxy) }
  def calls(); end

  sig { params(value: T.any(T::Array[::Call], ::Call::ActiveRecord_Associations_CollectionProxy)).void }
  def calls=(value); end

  sig { returns(T.nilable(::Carer)) }
  def carer(); end

  sig { params(value: T.nilable(::Carer)).void }
  def carer=(value); end

  sig { returns(::CaseNote::ActiveRecord_Associations_CollectionProxy) }
  def case_notes(); end

  sig { params(value: T.any(T::Array[::CaseNote], ::CaseNote::ActiveRecord_Associations_CollectionProxy)).void }
  def case_notes=(value); end

  sig { returns(::CaseWorkerClient::ActiveRecord_Associations_CollectionProxy) }
  def case_worker_clients(); end

  sig { params(value: T.any(T::Array[::CaseWorkerClient], ::CaseWorkerClient::ActiveRecord_Associations_CollectionProxy)).void }
  def case_worker_clients=(value); end

  sig { returns(::Case::ActiveRecord_Associations_CollectionProxy) }
  def cases(); end

  sig { params(value: T.any(T::Array[::Case], ::Case::ActiveRecord_Associations_CollectionProxy)).void }
  def cases=(value); end

  sig { returns(::ClientEnrollment::ActiveRecord_Associations_CollectionProxy) }
  def client_enrollments(); end

  sig { params(value: T.any(T::Array[::ClientEnrollment], ::ClientEnrollment::ActiveRecord_Associations_CollectionProxy)).void }
  def client_enrollments=(value); end

  sig { returns(::ClientQuantitativeCase::ActiveRecord_Associations_CollectionProxy) }
  def client_quantitative_cases(); end

  sig { params(value: T.any(T::Array[::ClientQuantitativeCase], ::ClientQuantitativeCase::ActiveRecord_Associations_CollectionProxy)).void }
  def client_quantitative_cases=(value); end

  sig { returns(T.nilable(::Commune)) }
  def commune(); end

  sig { params(value: T.nilable(::Commune)).void }
  def commune=(value); end

  sig { returns(T.nilable(::Commune)) }
  def concern_commune(); end

  sig { params(value: T.nilable(::Commune)).void }
  def concern_commune=(value); end

  sig { returns(T.nilable(::District)) }
  def concern_district(); end

  sig { params(value: T.nilable(::District)).void }
  def concern_district=(value); end

  sig { returns(T.nilable(::Province)) }
  def concern_province(); end

  sig { params(value: T.nilable(::Province)).void }
  def concern_province=(value); end

  sig { returns(T.nilable(::Village)) }
  def concern_village(); end

  sig { params(value: T.nilable(::Village)).void }
  def concern_village=(value); end

  sig { returns(::CustomFieldProperty::ActiveRecord_Associations_CollectionProxy) }
  def custom_field_properties(); end

  sig { params(value: T.any(T::Array[::CustomFieldProperty], ::CustomFieldProperty::ActiveRecord_Associations_CollectionProxy)).void }
  def custom_field_properties=(value); end

  sig { returns(::CustomField::ActiveRecord_Associations_CollectionProxy) }
  def custom_fields(); end

  sig { params(value: T.any(T::Array[::CustomField], ::CustomField::ActiveRecord_Associations_CollectionProxy)).void }
  def custom_fields=(value); end

  sig { returns(T.nilable(::District)) }
  def district(); end

  sig { params(value: T.nilable(::District)).void }
  def district=(value); end

  sig { returns(::Donor::ActiveRecord_Associations_CollectionProxy) }
  def donors(); end

  sig { params(value: T.any(T::Array[::Donor], ::Donor::ActiveRecord_Associations_CollectionProxy)).void }
  def donors=(value); end

  sig { returns(::EnterNgo::ActiveRecord_Associations_CollectionProxy) }
  def enter_ngos(); end

  sig { params(value: T.any(T::Array[::EnterNgo], ::EnterNgo::ActiveRecord_Associations_CollectionProxy)).void }
  def enter_ngos=(value); end

  sig { returns(::ExitNgo::ActiveRecord_Associations_CollectionProxy) }
  def exit_ngos(); end

  sig { params(value: T.any(T::Array[::ExitNgo], ::ExitNgo::ActiveRecord_Associations_CollectionProxy)).void }
  def exit_ngos=(value); end

  sig { returns(::Family::ActiveRecord_Associations_CollectionProxy) }
  def families(); end

  sig { params(value: T.any(T::Array[::Family], ::Family::ActiveRecord_Associations_CollectionProxy)).void }
  def families=(value); end

  sig { returns(T.nilable(::User)) }
  def followed_up_by(); end

  sig { params(value: T.nilable(::User)).void }
  def followed_up_by=(value); end

  sig { returns(T.nilable(::GlobalIdentity)) }
  def global_identity(); end

  sig { params(value: T.nilable(::GlobalIdentity)).void }
  def global_identity=(value); end

  sig { returns(::GlobalIdentityOrganization::ActiveRecord_Associations_CollectionProxy) }
  def global_identity_organizations(); end

  sig { params(value: T.any(T::Array[::GlobalIdentityOrganization], ::GlobalIdentityOrganization::ActiveRecord_Associations_CollectionProxy)).void }
  def global_identity_organizations=(value); end

  sig { returns(::GovernmentForm::ActiveRecord_Associations_CollectionProxy) }
  def government_forms(); end

  sig { params(value: T.any(T::Array[::GovernmentForm], ::GovernmentForm::ActiveRecord_Associations_CollectionProxy)).void }
  def government_forms=(value); end

  sig { returns(::Hotline::ActiveRecord_Associations_CollectionProxy) }
  def hotlines(); end

  sig { params(value: T.any(T::Array[::Hotline], ::Hotline::ActiveRecord_Associations_CollectionProxy)).void }
  def hotlines=(value); end

  sig { returns(::ProgramStream::ActiveRecord_Associations_CollectionProxy) }
  def program_streams(); end

  sig { params(value: T.any(T::Array[::ProgramStream], ::ProgramStream::ActiveRecord_Associations_CollectionProxy)).void }
  def program_streams=(value); end

  sig { returns(::ProgressNote::ActiveRecord_Associations_CollectionProxy) }
  def progress_notes(); end

  sig { params(value: T.any(T::Array[::ProgressNote], ::ProgressNote::ActiveRecord_Associations_CollectionProxy)).void }
  def progress_notes=(value); end

  sig { returns(T.nilable(::Province)) }
  def province(); end

  sig { params(value: T.nilable(::Province)).void }
  def province=(value); end

  sig { returns(::QuantitativeCase::ActiveRecord_Associations_CollectionProxy) }
  def quantitative_cases(); end

  sig { params(value: T.any(T::Array[::QuantitativeCase], ::QuantitativeCase::ActiveRecord_Associations_CollectionProxy)).void }
  def quantitative_cases=(value); end

  sig { returns(T.nilable(::User)) }
  def received_by(); end

  sig { params(value: T.nilable(::User)).void }
  def received_by=(value); end

  sig { returns(T.nilable(::Referee)) }
  def referee(); end

  sig { params(value: T.nilable(::Referee)).void }
  def referee=(value); end

  sig { returns(T.nilable(::ReferralSource)) }
  def referral_source(); end

  sig { params(value: T.nilable(::ReferralSource)).void }
  def referral_source=(value); end

  sig { returns(::Referral::ActiveRecord_Associations_CollectionProxy) }
  def referrals(); end

  sig { params(value: T.any(T::Array[::Referral], ::Referral::ActiveRecord_Associations_CollectionProxy)).void }
  def referrals=(value); end

  sig { returns(::Sponsor::ActiveRecord_Associations_CollectionProxy) }
  def sponsors(); end

  sig { params(value: T.any(T::Array[::Sponsor], ::Sponsor::ActiveRecord_Associations_CollectionProxy)).void }
  def sponsors=(value); end

  sig { returns(T.nilable(::State)) }
  def state(); end

  sig { params(value: T.nilable(::State)).void }
  def state=(value); end

  sig { returns(T.nilable(::Subdistrict)) }
  def subdistrict(); end

  sig { params(value: T.nilable(::Subdistrict)).void }
  def subdistrict=(value); end

  sig { returns(::Survey::ActiveRecord_Associations_CollectionProxy) }
  def surveys(); end

  sig { params(value: T.any(T::Array[::Survey], ::Survey::ActiveRecord_Associations_CollectionProxy)).void }
  def surveys=(value); end

  sig { returns(::Task::ActiveRecord_Associations_CollectionProxy) }
  def tasks(); end

  sig { params(value: T.any(T::Array[::Task], ::Task::ActiveRecord_Associations_CollectionProxy)).void }
  def tasks=(value); end

  sig { returns(T.nilable(::Township)) }
  def township(); end

  sig { params(value: T.nilable(::Township)).void }
  def township=(value); end

  sig { returns(::User::ActiveRecord_Associations_CollectionProxy) }
  def users(); end

  sig { params(value: T.any(T::Array[::User], ::User::ActiveRecord_Associations_CollectionProxy)).void }
  def users=(value); end

  sig { returns(::PaperTrail::Version::ActiveRecord_Associations_CollectionProxy) }
  def versions(); end

  sig { params(value: T.any(T::Array[::PaperTrail::Version], ::PaperTrail::Version::ActiveRecord_Associations_CollectionProxy)).void }
  def versions=(value); end

  sig { returns(T.nilable(::Village)) }
  def village(); end

  sig { params(value: T.nilable(::Village)).void }
  def village=(value); end

end

module Client::ModelRelationShared
  extend T::Sig

  sig { returns(Client::ActiveRecord_Relation) }
  def all(); end

  sig { params(block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def unscoped(&block); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def accepted(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def active_accepted_status(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def active_ec(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def active_fc(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def active_kc(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def active_status(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def birth_province_is(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def exited_ngo(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def family_name_like(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def female(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def find_by_family_id(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def given_name_like(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def is_followed_up_by(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def is_received_by(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def local_family_name_like(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def local_given_name_like(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def male(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def non_exited_ngo(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def of_case_worker(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def province_is(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def referral_source_is(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def referred_external(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def rejected(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def slug_like(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def start_with_code(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def status_like(*args); end

  sig { params(args: T.untyped).returns(Client::ActiveRecord_Relation) }
  def without_assessments(*args); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def select(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def order(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def reorder(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def group(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def limit(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def offset(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def joins(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def where(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def rewhere(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def preload(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def eager_load(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def includes(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def from(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def lock(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def readonly(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def or(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def having(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def create_with(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def distinct(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def references(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def none(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def unscope(*args, &block); end

  sig { params(args: T.untyped, block: T.nilable(T.proc.void)).returns(Client::ActiveRecord_Relation) }
  def except(*args, &block); end

end
